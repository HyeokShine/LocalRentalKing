{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\LocalRentalKing\\\\front\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInView } from 'react-intersection-observer';\nimport { Button, Col, Row } from 'antd';\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport LoginForm from '../components/LoginForm';\nimport { logoutRequestAction } from '../reducers/user';\nimport { LOAD_POST_REQUEST, TEST } from '../reducers/post';\nimport Tags from \"../components/Tags\";\nimport PostCard1 from \"../components/PostCard1\";\nimport Layout from \"../components/Layout\";\nimport PostCard2 from \"../components/PostCard2\";\n\nfunction Home() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostLoading = _useSelector2.loadPostLoading,\n      reTweetError = _useSelector2.reTweetError,\n      id = _useSelector2.id,\n      object_TagsData = _useSelector2.object_TagsData,\n      selectedTag = _useSelector2.selectedTag;\n\n  var _useState = useState(true),\n      view = _useState[0],\n      setView = _useState[1];\n\n  var onSwitch = useCallback(function () {\n    setView(!view);\n  }, [view]);\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: selectedTag,\n            boardNum: 1,\n            lastId: lastId\n          });\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\n\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostLoading]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, view ? __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Tags, {\n    tagsData: object_TagsData,\n    boardNum: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    onClick: onSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"\\uC804\\uD658\\uC2A4\\uC704\\uCE58\"), mainPosts.map(function (post) {\n    return __jsx(PostCard1, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 36\n      }\n    });\n  })) : __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(Tags, {\n    tagsData: object_TagsData,\n    boardNum: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    onClick: onSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"\\uC804\\uD658\\uC2A4\\uC704\\uCE58\"), mainPosts.map(function (post) {\n    return __jsx(PostCard2, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 36\n      }\n    });\n  })));\n}\n\n_s(Home, \"lpQ+URWh5rFJaDZpvIdkWLb2ThU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/pages/index.js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","useInView","Button","Col","Row","AppLayout","LoginForm","logoutRequestAction","LOAD_POST_REQUEST","TEST","Tags","PostCard1","Layout","PostCard2","Home","dispatch","state","user","me","post","mainPosts","hasMorePost","loadPostLoading","reTweetError","id","object_TagsData","selectedTag","view","setView","onSwitch","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","type","data","boardNum","addEventListener","removeEventListener","map"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport wrapper from '../store/configureStore';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useInView} from 'react-intersection-observer';\r\nimport {END} from 'redux-saga';\r\nimport {Button, Col, Row} from 'antd';\r\n\r\nimport AppLayout from '../components/AppLayout/AppLayout';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nimport {LOAD_MY_INFO_REQUEST, logoutRequestAction} from '../reducers/user';\r\nimport {LOAD_POST_REQUEST, TEST, UPDATE_TAG} from '../reducers/post';\r\nimport Tags from \"../components/Tags\";\r\nimport PostCard1 from \"../components/PostCard1\";\r\nimport axios from \"axios\";\r\nimport Layout from \"../components/Layout\";\r\nimport PostCard2 from \"../components/PostCard2\";\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const {me} = useSelector((state) => state.user);\r\n  const {\r\n    mainPosts,\r\n    hasMorePost,\r\n    loadPostLoading,\r\n    reTweetError,\r\n    id,\r\n    object_TagsData,\r\n    selectedTag\r\n  } = useSelector((state) => state.post);\r\n  const [view, setView] = useState(true);\r\n\r\n  const onSwitch = useCallback(() => {\r\n    setView(!view);\r\n  }, [view]);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\r\n        if (hasMorePost && !loadPostLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\r\n          dispatch({\r\n            type: LOAD_POST_REQUEST,\r\n            data: selectedTag,\r\n            boardNum: 1,\r\n            lastId: lastId,\r\n          });\r\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePost, loadPostLoading]);\r\n\r\n  return (\r\n    <div>\r\n      {view ? (\r\n        <Layout>\r\n          <Tags tagsData={object_TagsData} boardNum={1}/>\r\n          <Button onClick={onSwitch}>전환스위치</Button>\r\n          {mainPosts.map((post) => <PostCard1 key={post.id} post={post}/>)}\r\n        </Layout>\r\n      ) : (\r\n        <Layout>\r\n          <Tags tagsData={object_TagsData} boardNum={1}/>\r\n          <Button onClick={onSwitch}>전환스위치</Button>\r\n          {mainPosts.map((post) => <PostCard2 key={post.id} post={post}/>)}\r\n        </Layout>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: UPDATE_TAG,\r\n    data: \"전체\",\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: \"전체\",\r\n    boardNum: 1,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}