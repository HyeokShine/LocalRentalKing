{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  object_TagsData: ['전체', '공구', '의류', '전자기기', '서적', '게임/취미', '차량', '스포츠/래저', '뷰티/미용', '반려동물', '기타'],\n  talent_TagsData: ['전체', '미술', '구충', '설치', '코칭', '촬영', '일손', '기타'],\n  cooperate_tagsData: ['전체', '1+1', '배달', '공동구매', '기타'],\n  play_tagsData: ['전체', '질문', '자유'],\n  boardNum: null,\n  inputSearch: null,\n  select: null,\n  selectedTag: null,\n  category: null,\n  searchResultId: null,\n  singlePost: null,\n  hasMorePost: true,\n  searchPostLoading: false,\n  searchPostDone: false,\n  searchPostError: null,\n  loadProfilePostLoading: false,\n  loadProfilePostDone: false,\n  loadProfilePostError: null,\n  upLoadImagesLoading: false,\n  upLoadImagesDone: false,\n  upLoadImagesError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadSPostLoading: false,\n  loadSPostDone: false,\n  loadSPostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadUserPostsLoading: false,\n  loadUserPostsDone: false,\n  loadUserPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  modifyPostLoading: false,\n  modifyPostDone: false,\n  modifyPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const UPDATE_SEARCH = 'UPDATE_SEARCH';\nexport const UPDATE_BOARD = 'UPDATE_BOARD';\nexport const LOAD_CHANGE_TAG_REQUEST = 'LOAD_CHANGE_TAG_REQUEST';\nexport const LOAD_CHANGE_TAG_SUCCESS = 'LOAD_CHANGE_TAG_SUCCESS';\nexport const LOAD_CHANGE_TAG_FAILURE = 'LOAD_CHANGE_TAG_FAILURE';\nexport const SEND_DUMMYPOST_REQUEST = 'SEND_DUMMYPOST_REQUEST';\nexport const SEND_DUMMYPOST_SUCCESS = 'SEND_DUMMYPOST_SUCCESS';\nexport const SEND_DUMMYPOST_FAILURE = 'SEND_DUMMYPOST_FAILURE';\nexport const LOAD_SEARCH_POSTS_REQUEST = 'LOAD_SEARCH_POSTS_REQUEST';\nexport const LOAD_SEARCH_POSTS_SUCCESS = 'LOAD_SEARCH_POSTS_SUCCESS';\nexport const LOAD_SEARCH_POSTS_FAILURE = 'LOAD_SEARCH_POSTS_FAILURE';\nexport const MODIFY_POST_REQUEST = 'MODIFY_POST_REQUEST';\nexport const MODIFY_POST_SUCCESS = 'MODIFY_POST_SUCCESS';\nexport const MODIFY_POST_FAILURE = 'MODIFY_POST_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const LOAD_RELATED_POST_REQUEST = 'LOAD_RELATED_POST_REQUEST';\nexport const LOAD_RELATED_POST_SUCCESS = 'LOAD_RELATED_POST_SUCCESS';\nexport const LOAD_RELATED_POST_FAILURE = 'LOAD_RELATED_POST_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const LOAD_LIKED_POSTS_REQUEST = 'LOAD_LIKED_POSTS_REQUEST';\nexport const LOAD_LIKED_POSTS_SUCCESS = 'LOAD_LIKED_POSTS_SUCCESS';\nexport const LOAD_LIKED_POSTS_FAILURE = 'LOAD_LIKED_POSTS_FAILURE';\nexport const LOAD_SPOST_REQUEST = 'LOAD_SPOST_REQUEST';\nexport const LOAD_SPOST_SUCCESS = 'LOAD_SPOST_SUCCESS';\nexport const LOAD_SPOST_FAILURE = 'LOAD_SPOST_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const LOAD_RENTAL_POST_REQUEST = 'LOAD_RENTAL_POST_REQUEST';\nexport const LOAD_RENTAL_POST_SUCCESS = 'LOAD_RENTAL_POST_SUCCESS';\nexport const LOAD_RENTAL_POST_FAILURE = 'LOAD_RENTAL_POST_FAILURE';\nexport const LOAD_WRITE_POST_REQUEST = 'LOAD_WRITE_POST_REQUEST';\nexport const LOAD_WRITE_POST_SUCCESS = 'LOAD_WRITE_POST_SUCCESS';\nexport const LOAD_WRITE_POST_FAILURE = 'LOAD_WRITE_POST_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const UPDATE_TAG = 'UPDATE_TAG';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n}); // (이전상태,액션) => 다음상태\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case UPDATE_BOARD:\n      draft.boardNum = action.data;\n      break;\n\n    case UPDATE_SEARCH:\n      console.log(action.data);\n      draft.inputSearch = action.data.searchword;\n      draft.select = action.data.select;\n      break;\n\n    case LOAD_CHANGE_TAG_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_CHANGE_TAG_SUCCESS:\n      draft.mainPosts = action.data; // 기존 배열 밀어버리고 새롭게 10개씩 넣는다.\n\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      break;\n\n    case LOAD_CHANGE_TAG_FAILURE:\n      draft.loadPostError = action.error;\n      draft.loadPostLoading = false;\n      break;\n\n    case LOAD_SEARCH_POSTS_REQUEST:\n      draft.searchPostLoading = true;\n      draft.searchPostDone = false;\n      draft.searchPostError = null;\n      break;\n\n    case LOAD_SEARCH_POSTS_SUCCESS:\n      draft.mainPosts = draft.mainPosts.concat(action.data);\n      draft.searchPostLoading = false;\n      draft.searchPostDone = true;\n      draft.hasMorePost = action.data.length === 10;\n      break;\n\n    case LOAD_SEARCH_POSTS_FAILURE:\n      draft.searchPostError = action.error;\n      draft.searchPostLoading = false;\n      break;\n\n    case LOAD_RENTAL_POST_REQUEST:\n      draft.loadProfilePostLoading = true;\n      draft.loadProfilePostDone = false;\n      draft.loadProfilePostError = null;\n      break;\n\n    case LOAD_RENTAL_POST_SUCCESS:\n      {\n        if (action.data[0].board_boardnum === 1 || 2 || 3 || 4) {\n          // 렌탈 게시물이 쌓이고 있는경우\n          draft.mainPosts = draft.mainPosts.concat(action.data);\n        } else {\n          // 주제가 다른 게시물 덩어리를 가져올 경우\n          draft.mainPosts = action.data;\n        }\n\n        draft.loadProfilePostLoading = false;\n        draft.loadProfilePostDone = true;\n        break;\n      }\n\n    case LOAD_RENTAL_POST_FAILURE:\n      draft.loadProfilePostError = action.error;\n      draft.loadProfilePostLoading = false;\n      break;\n\n    case LOAD_WRITE_POST_REQUEST:\n      draft.loadProfilePostLoading = true;\n      draft.loadProfilePostDone = false;\n      draft.loadProfilePostError = null;\n      break;\n\n    case LOAD_WRITE_POST_SUCCESS:\n      {\n        if (action.data[0].boardNum === 5 || 6) {\n          // 렌탈 게시물이 쌓이고 있는경우\n          draft.mainPosts = draft.mainPosts.concat(action.data);\n        } else {\n          // 주제가 다른 게시물 덩어리를 가져올 경우\n          draft.mainPosts = action.data;\n        }\n\n        draft.loadProfilePostLoading = false;\n        draft.loadProfilePostDone = true;\n        break;\n      }\n\n    case LOAD_WRITE_POST_FAILURE:\n      draft.loadProfilePostError = action.error;\n      draft.loadProfilePostLoading = false;\n      break;\n\n    case UPDATE_TAG:\n      draft.selectedTag = action.data;\n      draft.hasMorePost = true;\n      break;\n\n    case REMOVE_IMAGE:\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n      break;\n\n    case UPLOAD_IMAGES_REQUEST:\n      draft.upLoadImagesLoading = true;\n      draft.upLoadImagesDone = false;\n      draft.upLoadImagesError = null;\n      break;\n\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        draft.imagePaths = action.data;\n        draft.upLoadImagesLoading = false;\n        draft.upLoadImagesDone = true;\n        break;\n      }\n\n    case UPLOAD_IMAGES_FAILURE:\n      draft.upLoadImagesError = action.error;\n      draft.upLoadImagesLoading = false;\n      break;\n\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n\n    case LIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers.push({\n          id: action.data.UserId\n        });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n\n    case LIKE_POST_FAILURE:\n      draft.likePostError = action.error;\n      draft.likePostLoading = false;\n      break;\n\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = null;\n      break;\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostError = action.error;\n      draft.unlikePostLoading = false;\n      break;\n\n    case LOAD_SPOST_REQUEST:\n      draft.loadSPostLoading = true;\n      draft.loadSPostDone = false;\n      draft.loadSPostError = null;\n      break;\n\n    case LOAD_SPOST_SUCCESS:\n      draft.singlePost = action.data;\n      draft.loadSPostLoading = false;\n      draft.loadSPostDone = true;\n      break;\n\n    case LOAD_SPOST_FAILURE:\n      draft.loadSPostError = action.error;\n      draft.loadSPostLoading = false;\n      break;\n\n    case LOAD_LIKED_POSTS_REQUEST:\n    case LOAD_RELATED_POST_REQUEST:\n    case LOAD_USER_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_LIKED_POSTS_SUCCESS:\n    case LOAD_RELATED_POST_SUCCESS:\n    case LOAD_USER_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_POST_SUCCESS:\n      if (draft.mainPosts.length > 0) {\n        // SSR로 처음에 들고오는 경우가 아닐때\n        if (draft.mainPosts[0].category !== action.data[0].category //카테고리 , 지역이 일치하지 않을때\n        && draft.mainPosts[0].location !== action.data[0].location) {\n          draft.mainPosts = action.data; // 기존 배열 밀어버리고 새롭게 10개씩 넣는다.\n          // draft.mainPosts = draft.mainPosts.concat(action.data);\n        } else {\n          draft.mainPosts = draft.mainPosts.concat(action.data); // 같은속성의 게시물을 쌓고있는 경우\n        }\n      } else {\n        draft.mainPosts = draft.mainPosts.concat(action.data); // SSR로 처음에 들고올때\n      }\n\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.hasMorePost = action.data.length === 10;\n      break;\n\n    case LOAD_LIKED_POSTS_FAILURE:\n    case LOAD_RELATED_POST_FAILURE:\n    case LOAD_USER_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_POST_FAILURE:\n      draft.loadPostError = action.error;\n      draft.loadPostLoading = false;\n      break;\n\n    case SEND_DUMMYPOST_REQUEST:\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case SEND_DUMMYPOST_SUCCESS:\n    case ADD_POST_SUCCESS:\n      draft.mainPosts.unshift(action.data);\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.imagePaths = [];\n      break;\n\n    case SEND_DUMMYPOST_FAILURE:\n    case ADD_POST_FAILURE:\n      draft.addPostError = action.error;\n      draft.addPostLoading = false;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostError = action.error;\n      draft.removePostLoading = false;\n      break;\n\n    case MODIFY_POST_REQUEST:\n      draft.modifyPostLoading = true;\n      draft.modifyPostDone = false;\n      draft.modifyPostError = null;\n      break;\n\n    case MODIFY_POST_SUCCESS:\n      draft.mainPosts.find(v => v.id === action.data.PostId).content = action.data.content;\n      draft.modifyPostLoading = false;\n      draft.modifyPostDone = true;\n      break;\n\n    case MODIFY_POST_FAILURE:\n      draft.modifyPostError = action.error;\n      draft.modifyPostLoading = false;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","object_TagsData","talent_TagsData","cooperate_tagsData","play_tagsData","boardNum","inputSearch","select","selectedTag","category","searchResultId","singlePost","hasMorePost","searchPostLoading","searchPostDone","searchPostError","loadProfilePostLoading","loadProfilePostDone","loadProfilePostError","upLoadImagesLoading","upLoadImagesDone","upLoadImagesError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadSPostLoading","loadSPostDone","loadSPostError","loadPostLoading","loadPostDone","loadPostError","loadUserPostsLoading","loadUserPostsDone","loadUserPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","modifyPostLoading","modifyPostDone","modifyPostError","addCommentLoading","addCommentDone","addCommentError","UPDATE_SEARCH","UPDATE_BOARD","LOAD_CHANGE_TAG_REQUEST","LOAD_CHANGE_TAG_SUCCESS","LOAD_CHANGE_TAG_FAILURE","SEND_DUMMYPOST_REQUEST","SEND_DUMMYPOST_SUCCESS","SEND_DUMMYPOST_FAILURE","LOAD_SEARCH_POSTS_REQUEST","LOAD_SEARCH_POSTS_SUCCESS","LOAD_SEARCH_POSTS_FAILURE","MODIFY_POST_REQUEST","MODIFY_POST_SUCCESS","MODIFY_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_RELATED_POST_REQUEST","LOAD_RELATED_POST_SUCCESS","LOAD_RELATED_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_LIKED_POSTS_REQUEST","LOAD_LIKED_POSTS_SUCCESS","LOAD_LIKED_POSTS_FAILURE","LOAD_SPOST_REQUEST","LOAD_SPOST_SUCCESS","LOAD_SPOST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_RENTAL_POST_REQUEST","LOAD_RENTAL_POST_SUCCESS","LOAD_RENTAL_POST_FAILURE","LOAD_WRITE_POST_REQUEST","LOAD_WRITE_POST_SUCCESS","LOAD_WRITE_POST_FAILURE","REMOVE_IMAGE","UPDATE_TAG","addPost","data","type","addComment","reducer","state","action","draft","console","log","searchword","error","concat","length","board_boardnum","filter","v","i","post","find","id","PostId","Likers","push","UserId","location","unshift","content","Comments"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,EADe;AAE1BC,EAAAA,UAAU,EAAE,EAFc;AAG1BC,EAAAA,eAAe,EAAE,CAAC,IAAD,EAAO,IAAP,EACf,IADe,EAEf,MAFe,EAGf,IAHe,EAIf,OAJe,EAKf,IALe,EAMf,QANe,EAOf,OAPe,EAQf,MARe,EASf,IATe,CAHS;AAa1BC,EAAAA,eAAe,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAbS;AAc1BC,EAAAA,kBAAkB,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,MAApB,EAA4B,IAA5B,CAdM;AAe1BC,EAAAA,aAAa,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAfW;AAgB1BC,EAAAA,QAAQ,EAAC,IAhBiB;AAiB1BC,EAAAA,WAAW,EAAC,IAjBc;AAkB1BC,EAAAA,MAAM,EAAC,IAlBmB;AAmB1BC,EAAAA,WAAW,EAAE,IAnBa;AAoB1BC,EAAAA,QAAQ,EAAE,IApBgB;AAqB1BC,EAAAA,cAAc,EAAE,IArBU;AAsB1BC,EAAAA,UAAU,EAAE,IAtBc;AAuB1BC,EAAAA,WAAW,EAAE,IAvBa;AAwB1BC,EAAAA,iBAAiB,EAAE,KAxBO;AAyB1BC,EAAAA,cAAc,EAAE,KAzBU;AA0B1BC,EAAAA,eAAe,EAAE,IA1BS;AA2B1BC,EAAAA,sBAAsB,EAAE,KA3BE;AA4B1BC,EAAAA,mBAAmB,EAAE,KA5BK;AA6B1BC,EAAAA,oBAAoB,EAAE,IA7BI;AA8B1BC,EAAAA,mBAAmB,EAAE,KA9BK;AA+B1BC,EAAAA,gBAAgB,EAAE,KA/BQ;AAgC1BC,EAAAA,iBAAiB,EAAE,IAhCO;AAiC1BC,EAAAA,eAAe,EAAE,KAjCS;AAkC1BC,EAAAA,YAAY,EAAE,KAlCY;AAmC1BC,EAAAA,aAAa,EAAE,IAnCW;AAoC1BC,EAAAA,iBAAiB,EAAE,KApCO;AAqC1BC,EAAAA,cAAc,EAAE,KArCU;AAsC1BC,EAAAA,eAAe,EAAE,IAtCS;AAuC1BC,EAAAA,gBAAgB,EAAE,KAvCQ;AAwC1BC,EAAAA,aAAa,EAAE,KAxCW;AAyC1BC,EAAAA,cAAc,EAAE,IAzCU;AA0C1BC,EAAAA,eAAe,EAAE,KA1CS;AA2C1BC,EAAAA,YAAY,EAAE,KA3CY;AA4C1BC,EAAAA,aAAa,EAAE,IA5CW;AA6C1BC,EAAAA,oBAAoB,EAAE,KA7CI;AA8C1BC,EAAAA,iBAAiB,EAAE,KA9CO;AA+C1BC,EAAAA,kBAAkB,EAAE,IA/CM;AAgD1BC,EAAAA,cAAc,EAAE,KAhDU;AAiD1BC,EAAAA,WAAW,EAAE,KAjDa;AAkD1BC,EAAAA,YAAY,EAAE,IAlDY;AAmD1BC,EAAAA,iBAAiB,EAAE,KAnDO;AAoD1BC,EAAAA,cAAc,EAAE,KApDU;AAqD1BC,EAAAA,eAAe,EAAE,IArDS;AAsD1BC,EAAAA,iBAAiB,EAAE,KAtDO;AAuD1BC,EAAAA,cAAc,EAAE,KAvDU;AAwD1BC,EAAAA,eAAe,EAAE,IAxDS;AAyD1BC,EAAAA,iBAAiB,EAAE,KAzDO;AA0D1BC,EAAAA,cAAc,EAAE,KA1DU;AA2D1BC,EAAAA,eAAe,EAAE;AA3DS,CAArB;AA8DP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AACP,OAAO,MAAMC,yBAAyB,GAAG,2BAAlC;AAEP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC;AAEP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AAEP,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEnB,gBAD0B;AAEhCkB,EAAAA;AAFgC,CAAX,CAAhB;AAKP,OAAO,MAAME,UAAU,GAAIF,IAAD,KAAW;AACnCC,EAAAA,IAAI,EAAEb,mBAD6B;AAEnCY,EAAAA;AAFmC,CAAX,CAAnB,C,CAKP;;AACA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAAGlH,YAAT,EAAuBmH,MAAvB,KAAkCpH,OAAO,CAACmH,KAAD,EAASE,KAAD,IAAW;AAC1E,UAAQD,MAAM,CAACJ,IAAf;AACE,SAAK3D,YAAL;AACEgE,MAAAA,KAAK,CAAC7G,QAAN,GAAiB4G,MAAM,CAACL,IAAxB;AACA;;AACF,SAAK3D,aAAL;AACEkE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACL,IAAnB;AACAM,MAAAA,KAAK,CAAC5G,WAAN,GAAoB2G,MAAM,CAACL,IAAP,CAAYS,UAAhC;AACAH,MAAAA,KAAK,CAAC3G,MAAN,GAAe0G,MAAM,CAACL,IAAP,CAAYrG,MAA3B;AACA;;AACF,SAAK4C,uBAAL;AACE+D,MAAAA,KAAK,CAACnF,eAAN,GAAwB,IAAxB;AACAmF,MAAAA,KAAK,CAAClF,YAAN,GAAqB,KAArB;AACAkF,MAAAA,KAAK,CAACjF,aAAN,GAAsB,IAAtB;AACA;;AACF,SAAKmB,uBAAL;AACE8D,MAAAA,KAAK,CAACnH,SAAN,GAAkBkH,MAAM,CAACL,IAAzB,CADF,CACiC;;AAC/BM,MAAAA,KAAK,CAACnF,eAAN,GAAwB,KAAxB;AACAmF,MAAAA,KAAK,CAAClF,YAAN,GAAqB,IAArB;AACA;;AACF,SAAKqB,uBAAL;AACE6D,MAAAA,KAAK,CAACjF,aAAN,GAAsBgF,MAAM,CAACK,KAA7B;AACAJ,MAAAA,KAAK,CAACnF,eAAN,GAAwB,KAAxB;AACA;;AACF,SAAK0B,yBAAL;AACEyD,MAAAA,KAAK,CAACrG,iBAAN,GAA0B,IAA1B;AACAqG,MAAAA,KAAK,CAACpG,cAAN,GAAuB,KAAvB;AACAoG,MAAAA,KAAK,CAACnG,eAAN,GAAwB,IAAxB;AACA;;AACF,SAAK2C,yBAAL;AACEwD,MAAAA,KAAK,CAACnH,SAAN,GAAkBmH,KAAK,CAACnH,SAAN,CAAgBwH,MAAhB,CAAuBN,MAAM,CAACL,IAA9B,CAAlB;AACAM,MAAAA,KAAK,CAACrG,iBAAN,GAA0B,KAA1B;AACAqG,MAAAA,KAAK,CAACpG,cAAN,GAAuB,IAAvB;AACAoG,MAAAA,KAAK,CAACtG,WAAN,GAAoBqG,MAAM,CAACL,IAAP,CAAYY,MAAZ,KAAuB,EAA3C;AACA;;AACF,SAAK7D,yBAAL;AACEuD,MAAAA,KAAK,CAACnG,eAAN,GAAwBkG,MAAM,CAACK,KAA/B;AACAJ,MAAAA,KAAK,CAACrG,iBAAN,GAA0B,KAA1B;AACA;;AACF,SAAKsF,wBAAL;AACEe,MAAAA,KAAK,CAAClG,sBAAN,GAA+B,IAA/B;AACAkG,MAAAA,KAAK,CAACjG,mBAAN,GAA4B,KAA5B;AACAiG,MAAAA,KAAK,CAAChG,oBAAN,GAA6B,IAA7B;AACA;;AACF,SAAKkF,wBAAL;AAA+B;AAC7B,YAAIa,MAAM,CAACL,IAAP,CAAY,CAAZ,EAAea,cAAf,KAAkC,CAAlC,IAAuC,CAAvC,IAA4C,CAA5C,IAAiD,CAArD,EAAwD;AAAE;AACxDP,UAAAA,KAAK,CAACnH,SAAN,GAAkBmH,KAAK,CAACnH,SAAN,CAAgBwH,MAAhB,CAAuBN,MAAM,CAACL,IAA9B,CAAlB;AACD,SAFD,MAEO;AAAE;AACPM,UAAAA,KAAK,CAACnH,SAAN,GAAkBkH,MAAM,CAACL,IAAzB;AACD;;AACDM,QAAAA,KAAK,CAAClG,sBAAN,GAA+B,KAA/B;AACAkG,QAAAA,KAAK,CAACjG,mBAAN,GAA4B,IAA5B;AACA;AACD;;AACD,SAAKoF,wBAAL;AACEa,MAAAA,KAAK,CAAChG,oBAAN,GAA6B+F,MAAM,CAACK,KAApC;AACAJ,MAAAA,KAAK,CAAClG,sBAAN,GAA+B,KAA/B;AACA;;AACF,SAAKsF,uBAAL;AACEY,MAAAA,KAAK,CAAClG,sBAAN,GAA+B,IAA/B;AACAkG,MAAAA,KAAK,CAACjG,mBAAN,GAA4B,KAA5B;AACAiG,MAAAA,KAAK,CAAChG,oBAAN,GAA6B,IAA7B;AACA;;AACF,SAAKqF,uBAAL;AAA8B;AAC5B,YAAIU,MAAM,CAACL,IAAP,CAAY,CAAZ,EAAevG,QAAf,KAA4B,CAA5B,IAAiC,CAArC,EAAwC;AAAE;AACxC6G,UAAAA,KAAK,CAACnH,SAAN,GAAkBmH,KAAK,CAACnH,SAAN,CAAgBwH,MAAhB,CAAuBN,MAAM,CAACL,IAA9B,CAAlB;AACD,SAFD,MAEO;AAAE;AACPM,UAAAA,KAAK,CAACnH,SAAN,GAAkBkH,MAAM,CAACL,IAAzB;AACD;;AACDM,QAAAA,KAAK,CAAClG,sBAAN,GAA+B,KAA/B;AACAkG,QAAAA,KAAK,CAACjG,mBAAN,GAA4B,IAA5B;AACA;AACD;;AACD,SAAKuF,uBAAL;AACEU,MAAAA,KAAK,CAAChG,oBAAN,GAA6B+F,MAAM,CAACK,KAApC;AACAJ,MAAAA,KAAK,CAAClG,sBAAN,GAA+B,KAA/B;AACA;;AACF,SAAK0F,UAAL;AACEQ,MAAAA,KAAK,CAAC1G,WAAN,GAAoByG,MAAM,CAACL,IAA3B;AACAM,MAAAA,KAAK,CAACtG,WAAN,GAAoB,IAApB;AACA;;AACF,SAAK6F,YAAL;AACES,MAAAA,KAAK,CAAClH,UAAN,GAAmBkH,KAAK,CAAClH,UAAN,CAAiB0H,MAAjB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,KAAKX,MAAM,CAACL,IAA/C,CAAnB;AACA;;AACF,SAAK7C,qBAAL;AACEmD,MAAAA,KAAK,CAAC/F,mBAAN,GAA4B,IAA5B;AACA+F,MAAAA,KAAK,CAAC9F,gBAAN,GAAyB,KAAzB;AACA8F,MAAAA,KAAK,CAAC7F,iBAAN,GAA0B,IAA1B;AACA;;AACF,SAAK2C,qBAAL;AAA4B;AAC1BkD,QAAAA,KAAK,CAAClH,UAAN,GAAmBiH,MAAM,CAACL,IAA1B;AACAM,QAAAA,KAAK,CAAC/F,mBAAN,GAA4B,KAA5B;AACA+F,QAAAA,KAAK,CAAC9F,gBAAN,GAAyB,IAAzB;AACA;AACD;;AACD,SAAK6C,qBAAL;AACEiD,MAAAA,KAAK,CAAC7F,iBAAN,GAA0B4F,MAAM,CAACK,KAAjC;AACAJ,MAAAA,KAAK,CAAC/F,mBAAN,GAA4B,KAA5B;AACA;;AACF,SAAK+C,iBAAL;AACEgD,MAAAA,KAAK,CAAC5F,eAAN,GAAwB,IAAxB;AACA4F,MAAAA,KAAK,CAAC3F,YAAN,GAAqB,KAArB;AACA2F,MAAAA,KAAK,CAAC1F,aAAN,GAAsB,IAAtB;AACA;;AACF,SAAK2C,iBAAL;AAAwB;AACtB,cAAM0D,IAAI,GAAGX,KAAK,CAACnH,SAAN,CAAgB+H,IAAhB,CAAsBH,CAAD,IAAOA,CAAC,CAACI,EAAF,KAASd,MAAM,CAACL,IAAP,CAAYoB,MAAjD,CAAb;AACAH,QAAAA,IAAI,CAACI,MAAL,CAAYC,IAAZ,CAAiB;AAACH,UAAAA,EAAE,EAAEd,MAAM,CAACL,IAAP,CAAYuB;AAAjB,SAAjB;AACAjB,QAAAA,KAAK,CAAC5F,eAAN,GAAwB,KAAxB;AACA4F,QAAAA,KAAK,CAAC3F,YAAN,GAAqB,IAArB;AACA;AACD;;AACD,SAAK6C,iBAAL;AACE8C,MAAAA,KAAK,CAAC1F,aAAN,GAAsByF,MAAM,CAACK,KAA7B;AACAJ,MAAAA,KAAK,CAAC5F,eAAN,GAAwB,KAAxB;AACA;;AACF,SAAK+C,mBAAL;AACE6C,MAAAA,KAAK,CAACzF,iBAAN,GAA0B,IAA1B;AACAyF,MAAAA,KAAK,CAACxF,cAAN,GAAuB,KAAvB;AACAwF,MAAAA,KAAK,CAACvF,eAAN,GAAwB,IAAxB;AACA;;AACF,SAAK2C,mBAAL;AAA0B;AACxB,cAAMuD,IAAI,GAAGX,KAAK,CAACnH,SAAN,CAAgB+H,IAAhB,CAAsBH,CAAD,IAAOA,CAAC,CAACI,EAAF,KAASd,MAAM,CAACL,IAAP,CAAYoB,MAAjD,CAAb;AACAH,QAAAA,IAAI,CAACI,MAAL,GAAcJ,IAAI,CAACI,MAAL,CAAYP,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACI,EAAF,KAASd,MAAM,CAACL,IAAP,CAAYuB,MAA/C,CAAd;AACAjB,QAAAA,KAAK,CAACzF,iBAAN,GAA0B,KAA1B;AACAyF,QAAAA,KAAK,CAACxF,cAAN,GAAuB,IAAvB;AACA;AACD;;AACD,SAAK6C,mBAAL;AACE2C,MAAAA,KAAK,CAACvF,eAAN,GAAwBsF,MAAM,CAACK,KAA/B;AACAJ,MAAAA,KAAK,CAACzF,iBAAN,GAA0B,KAA1B;AACA;;AACF,SAAK8D,kBAAL;AACE2B,MAAAA,KAAK,CAACtF,gBAAN,GAAyB,IAAzB;AACAsF,MAAAA,KAAK,CAACrF,aAAN,GAAsB,KAAtB;AACAqF,MAAAA,KAAK,CAACpF,cAAN,GAAuB,IAAvB;AACA;;AACF,SAAK0D,kBAAL;AACE0B,MAAAA,KAAK,CAACvG,UAAN,GAAmBsG,MAAM,CAACL,IAA1B;AACAM,MAAAA,KAAK,CAACtF,gBAAN,GAAyB,KAAzB;AACAsF,MAAAA,KAAK,CAACrF,aAAN,GAAsB,IAAtB;AACA;;AACF,SAAK4D,kBAAL;AACEyB,MAAAA,KAAK,CAACpF,cAAN,GAAuBmF,MAAM,CAACK,KAA9B;AACAJ,MAAAA,KAAK,CAACtF,gBAAN,GAAyB,KAAzB;AACA;;AACF,SAAKwD,wBAAL;AACA,SAAKT,yBAAL;AACA,SAAKG,uBAAL;AACA,SAAKG,0BAAL;AACA,SAAKT,iBAAL;AACE0C,MAAAA,KAAK,CAACnF,eAAN,GAAwB,IAAxB;AACAmF,MAAAA,KAAK,CAAClF,YAAN,GAAqB,KAArB;AACAkF,MAAAA,KAAK,CAACjF,aAAN,GAAsB,IAAtB;AACA;;AACF,SAAKoD,wBAAL;AACA,SAAKT,yBAAL;AACA,SAAKG,uBAAL;AACA,SAAKG,0BAAL;AACA,SAAKT,iBAAL;AACE,UAAIyC,KAAK,CAACnH,SAAN,CAAgByH,MAAhB,GAAyB,CAA7B,EAAgC;AAAE;AAChC,YAAIN,KAAK,CAACnH,SAAN,CAAgB,CAAhB,EAAmBU,QAAnB,KAAgCwG,MAAM,CAACL,IAAP,CAAY,CAAZ,EAAenG,QAA/C,CAAwD;AAAxD,WACCyG,KAAK,CAACnH,SAAN,CAAgB,CAAhB,EAAmBqI,QAAnB,KAAgCnB,MAAM,CAACL,IAAP,CAAY,CAAZ,EAAewB,QADpD,EAC8D;AAC5DlB,UAAAA,KAAK,CAACnH,SAAN,GAAkBkH,MAAM,CAACL,IAAzB,CAD4D,CAC7B;AAC/B;AACD,SAJD,MAIO;AACLM,UAAAA,KAAK,CAACnH,SAAN,GAAkBmH,KAAK,CAACnH,SAAN,CAAgBwH,MAAhB,CAAuBN,MAAM,CAACL,IAA9B,CAAlB,CADK,CACkD;AACxD;AACF,OARD,MASK;AACHM,QAAAA,KAAK,CAACnH,SAAN,GAAkBmH,KAAK,CAACnH,SAAN,CAAgBwH,MAAhB,CAAuBN,MAAM,CAACL,IAA9B,CAAlB,CADG,CACoD;AACxD;;AACDM,MAAAA,KAAK,CAACnF,eAAN,GAAwB,KAAxB;AACAmF,MAAAA,KAAK,CAAClF,YAAN,GAAqB,IAArB;AACAkF,MAAAA,KAAK,CAACtG,WAAN,GAAoBqG,MAAM,CAACL,IAAP,CAAYY,MAAZ,KAAuB,EAA3C;AACA;;AACF,SAAKlC,wBAAL;AACA,SAAKT,yBAAL;AACA,SAAKG,uBAAL;AACA,SAAKG,0BAAL;AACA,SAAKT,iBAAL;AACEwC,MAAAA,KAAK,CAACjF,aAAN,GAAsBgF,MAAM,CAACK,KAA7B;AACAJ,MAAAA,KAAK,CAACnF,eAAN,GAAwB,KAAxB;AACA;;AACF,SAAKuB,sBAAL;AACA,SAAKoC,gBAAL;AACEwB,MAAAA,KAAK,CAAC7E,cAAN,GAAuB,IAAvB;AACA6E,MAAAA,KAAK,CAAC5E,WAAN,GAAoB,KAApB;AACA4E,MAAAA,KAAK,CAAC3E,YAAN,GAAqB,IAArB;AACA;;AACF,SAAKgB,sBAAL;AACA,SAAKoC,gBAAL;AACEuB,MAAAA,KAAK,CAACnH,SAAN,CAAgBsI,OAAhB,CAAwBpB,MAAM,CAACL,IAA/B;AACAM,MAAAA,KAAK,CAAC7E,cAAN,GAAuB,KAAvB;AACA6E,MAAAA,KAAK,CAAC5E,WAAN,GAAoB,IAApB;AACA4E,MAAAA,KAAK,CAAClH,UAAN,GAAmB,EAAnB;AACA;;AACF,SAAKwD,sBAAL;AACA,SAAKoC,gBAAL;AACEsB,MAAAA,KAAK,CAAC3E,YAAN,GAAqB0E,MAAM,CAACK,KAA5B;AACAJ,MAAAA,KAAK,CAAC7E,cAAN,GAAuB,KAAvB;AACA;;AACF,SAAKwD,mBAAL;AACEqB,MAAAA,KAAK,CAAC1E,iBAAN,GAA0B,IAA1B;AACA0E,MAAAA,KAAK,CAACzE,cAAN,GAAuB,KAAvB;AACAyE,MAAAA,KAAK,CAACxE,eAAN,GAAwB,IAAxB;AACA;;AACF,SAAKoD,mBAAL;AACEoB,MAAAA,KAAK,CAACnH,SAAN,GAAkBmH,KAAK,CAACnH,SAAN,CAAgB2H,MAAhB,CAAwBC,CAAD,IAAOA,CAAC,CAACI,EAAF,KAASd,MAAM,CAACL,IAAP,CAAYoB,MAAnD,CAAlB;AACAd,MAAAA,KAAK,CAAC1E,iBAAN,GAA0B,KAA1B;AACA0E,MAAAA,KAAK,CAACzE,cAAN,GAAuB,IAAvB;AACA;;AACF,SAAKsD,mBAAL;AACEmB,MAAAA,KAAK,CAACxE,eAAN,GAAwBuE,MAAM,CAACK,KAA/B;AACAJ,MAAAA,KAAK,CAAC1E,iBAAN,GAA0B,KAA1B;AACA;;AACF,SAAKoB,mBAAL;AACEsD,MAAAA,KAAK,CAACvE,iBAAN,GAA0B,IAA1B;AACAuE,MAAAA,KAAK,CAACtE,cAAN,GAAuB,KAAvB;AACAsE,MAAAA,KAAK,CAACrE,eAAN,GAAwB,IAAxB;AACA;;AACF,SAAKgB,mBAAL;AACEqD,MAAAA,KAAK,CAACnH,SAAN,CAAgB+H,IAAhB,CAAsBH,CAAD,IAAOA,CAAC,CAACI,EAAF,KAASd,MAAM,CAACL,IAAP,CAAYoB,MAAjD,EAAyDM,OAAzD,GAAmErB,MAAM,CAACL,IAAP,CAAY0B,OAA/E;AACApB,MAAAA,KAAK,CAACvE,iBAAN,GAA0B,KAA1B;AACAuE,MAAAA,KAAK,CAACtE,cAAN,GAAuB,IAAvB;AACA;;AACF,SAAKkB,mBAAL;AACEoD,MAAAA,KAAK,CAACrE,eAAN,GAAwBoE,MAAM,CAACK,KAA/B;AACAJ,MAAAA,KAAK,CAACvE,iBAAN,GAA0B,KAA1B;;AACF,SAAKqD,mBAAL;AACEkB,MAAAA,KAAK,CAACpE,iBAAN,GAA0B,IAA1B;AACAoE,MAAAA,KAAK,CAACnE,cAAN,GAAuB,KAAvB;AACAmE,MAAAA,KAAK,CAAClE,eAAN,GAAwB,IAAxB;AACA;;AACF,SAAKiD,mBAAL;AAA0B;AACxB,cAAM4B,IAAI,GAAGX,KAAK,CAACnH,SAAN,CAAgB+H,IAAhB,CAAsBH,CAAD,IAAOA,CAAC,CAACI,EAAF,KAASd,MAAM,CAACL,IAAP,CAAYoB,MAAjD,CAAb;AACAH,QAAAA,IAAI,CAACU,QAAL,CAAcF,OAAd,CAAsBpB,MAAM,CAACL,IAA7B;AACAM,QAAAA,KAAK,CAACpE,iBAAN,GAA0B,KAA1B;AACAoE,QAAAA,KAAK,CAACnE,cAAN,GAAuB,IAAvB;AACA;AACD;;AACD,SAAKmD,mBAAL;AACEgB,MAAAA,KAAK,CAACpE,iBAAN,GAA0B,KAA1B;AACAoE,MAAAA,KAAK,CAAClE,eAAN,GAAwBiE,MAAM,CAACK,KAA/B;AACA;;AACF;AACE;AApPJ;AAsPD,CAvPwD,CAAzD;;AAyPA,eAAeP,OAAf","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  object_TagsData: ['전체', '공구',\r\n    '의류',\r\n    '전자기기',\r\n    '서적',\r\n    '게임/취미',\r\n    '차량',\r\n    '스포츠/래저',\r\n    '뷰티/미용',\r\n    '반려동물',\r\n    '기타',],\r\n  talent_TagsData: ['전체', '미술', '구충', '설치', '코칭', '촬영', '일손', '기타'],\r\n  cooperate_tagsData: ['전체', '1+1', '배달', '공동구매', '기타'],\r\n  play_tagsData: ['전체', '질문', '자유'],\r\n  boardNum:null,\r\n  inputSearch:null,\r\n  select:null,\r\n  selectedTag: null,\r\n  category: null,\r\n  searchResultId: null,\r\n  singlePost: null,\r\n  hasMorePost: true,\r\n  searchPostLoading: false,\r\n  searchPostDone: false,\r\n  searchPostError: null,\r\n  loadProfilePostLoading: false,\r\n  loadProfilePostDone: false,\r\n  loadProfilePostError: null,\r\n  upLoadImagesLoading: false,\r\n  upLoadImagesDone: false,\r\n  upLoadImagesError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadSPostLoading: false,\r\n  loadSPostDone: false,\r\n  loadSPostError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  loadUserPostsLoading: false,\r\n  loadUserPostsDone: false,\r\n  loadUserPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  modifyPostLoading: false,\r\n  modifyPostDone: false,\r\n  modifyPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const UPDATE_SEARCH = 'UPDATE_SEARCH';\r\nexport const UPDATE_BOARD = 'UPDATE_BOARD';\r\n\r\nexport const LOAD_CHANGE_TAG_REQUEST = 'LOAD_CHANGE_TAG_REQUEST';\r\nexport const LOAD_CHANGE_TAG_SUCCESS = 'LOAD_CHANGE_TAG_SUCCESS';\r\nexport const LOAD_CHANGE_TAG_FAILURE = 'LOAD_CHANGE_TAG_FAILURE';\r\n\r\nexport const SEND_DUMMYPOST_REQUEST = 'SEND_DUMMYPOST_REQUEST';\r\nexport const SEND_DUMMYPOST_SUCCESS = 'SEND_DUMMYPOST_SUCCESS';\r\nexport const SEND_DUMMYPOST_FAILURE = 'SEND_DUMMYPOST_FAILURE';\r\n\r\nexport const LOAD_SEARCH_POSTS_REQUEST = 'LOAD_SEARCH_POSTS_REQUEST';\r\nexport const LOAD_SEARCH_POSTS_SUCCESS = 'LOAD_SEARCH_POSTS_SUCCESS';\r\nexport const LOAD_SEARCH_POSTS_FAILURE = 'LOAD_SEARCH_POSTS_FAILURE';\r\n\r\nexport const MODIFY_POST_REQUEST = 'MODIFY_POST_REQUEST';\r\nexport const MODIFY_POST_SUCCESS = 'MODIFY_POST_SUCCESS';\r\nexport const MODIFY_POST_FAILURE = 'MODIFY_POST_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const LOAD_RELATED_POST_REQUEST = 'LOAD_RELATED_POST_REQUEST';\r\nexport const LOAD_RELATED_POST_SUCCESS = 'LOAD_RELATED_POST_SUCCESS';\r\nexport const LOAD_RELATED_POST_FAILURE = 'LOAD_RELATED_POST_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_LIKED_POSTS_REQUEST = 'LOAD_LIKED_POSTS_REQUEST';\r\nexport const LOAD_LIKED_POSTS_SUCCESS = 'LOAD_LIKED_POSTS_SUCCESS';\r\nexport const LOAD_LIKED_POSTS_FAILURE = 'LOAD_LIKED_POSTS_FAILURE';\r\n\r\nexport const LOAD_SPOST_REQUEST = 'LOAD_SPOST_REQUEST';\r\nexport const LOAD_SPOST_SUCCESS = 'LOAD_SPOST_SUCCESS';\r\nexport const LOAD_SPOST_FAILURE = 'LOAD_SPOST_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const LOAD_RENTAL_POST_REQUEST = 'LOAD_RENTAL_POST_REQUEST';\r\nexport const LOAD_RENTAL_POST_SUCCESS = 'LOAD_RENTAL_POST_SUCCESS';\r\nexport const LOAD_RENTAL_POST_FAILURE = 'LOAD_RENTAL_POST_FAILURE';\r\n\r\nexport const LOAD_WRITE_POST_REQUEST = 'LOAD_WRITE_POST_REQUEST';\r\nexport const LOAD_WRITE_POST_SUCCESS = 'LOAD_WRITE_POST_SUCCESS';\r\nexport const LOAD_WRITE_POST_FAILURE = 'LOAD_WRITE_POST_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const UPDATE_TAG = 'UPDATE_TAG';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\n// (이전상태,액션) => 다음상태\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case UPDATE_BOARD:\r\n      draft.boardNum = action.data;\r\n      break;\r\n    case UPDATE_SEARCH:\r\n      console.log(action.data);\r\n      draft.inputSearch = action.data.searchword;\r\n      draft.select = action.data.select;\r\n      break;\r\n    case LOAD_CHANGE_TAG_REQUEST:\r\n      draft.loadPostLoading = true;\r\n      draft.loadPostDone = false;\r\n      draft.loadPostError = null;\r\n      break;\r\n    case LOAD_CHANGE_TAG_SUCCESS:\r\n      draft.mainPosts = action.data; // 기존 배열 밀어버리고 새롭게 10개씩 넣는다.\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostDone = true;\r\n      break;\r\n    case LOAD_CHANGE_TAG_FAILURE:\r\n      draft.loadPostError = action.error;\r\n      draft.loadPostLoading = false;\r\n      break;\r\n    case LOAD_SEARCH_POSTS_REQUEST:\r\n      draft.searchPostLoading = true;\r\n      draft.searchPostDone = false;\r\n      draft.searchPostError = null;\r\n      break;\r\n    case LOAD_SEARCH_POSTS_SUCCESS:\r\n      draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      draft.searchPostLoading = false;\r\n      draft.searchPostDone = true;\r\n      draft.hasMorePost = action.data.length === 10;\r\n      break;\r\n    case LOAD_SEARCH_POSTS_FAILURE:\r\n      draft.searchPostError = action.error;\r\n      draft.searchPostLoading = false;\r\n      break;\r\n    case LOAD_RENTAL_POST_REQUEST:\r\n      draft.loadProfilePostLoading = true;\r\n      draft.loadProfilePostDone = false;\r\n      draft.loadProfilePostError = null;\r\n      break;\r\n    case LOAD_RENTAL_POST_SUCCESS: {\r\n      if (action.data[0].board_boardnum === 1 || 2 || 3 || 4) { // 렌탈 게시물이 쌓이고 있는경우\r\n        draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      } else { // 주제가 다른 게시물 덩어리를 가져올 경우\r\n        draft.mainPosts = action.data;\r\n      }\r\n      draft.loadProfilePostLoading = false;\r\n      draft.loadProfilePostDone = true;\r\n      break;\r\n    }\r\n    case LOAD_RENTAL_POST_FAILURE:\r\n      draft.loadProfilePostError = action.error;\r\n      draft.loadProfilePostLoading = false;\r\n      break;\r\n    case LOAD_WRITE_POST_REQUEST:\r\n      draft.loadProfilePostLoading = true;\r\n      draft.loadProfilePostDone = false;\r\n      draft.loadProfilePostError = null;\r\n      break;\r\n    case LOAD_WRITE_POST_SUCCESS: {\r\n      if (action.data[0].boardNum === 5 || 6) { // 렌탈 게시물이 쌓이고 있는경우\r\n        draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      } else { // 주제가 다른 게시물 덩어리를 가져올 경우\r\n        draft.mainPosts = action.data;\r\n      }\r\n      draft.loadProfilePostLoading = false;\r\n      draft.loadProfilePostDone = true;\r\n      break;\r\n    }\r\n    case LOAD_WRITE_POST_FAILURE:\r\n      draft.loadProfilePostError = action.error;\r\n      draft.loadProfilePostLoading = false;\r\n      break;\r\n    case UPDATE_TAG:\r\n      draft.selectedTag = action.data;\r\n      draft.hasMorePost = true;\r\n      break;\r\n    case REMOVE_IMAGE:\r\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n      break;\r\n    case UPLOAD_IMAGES_REQUEST:\r\n      draft.upLoadImagesLoading = true;\r\n      draft.upLoadImagesDone = false;\r\n      draft.upLoadImagesError = null;\r\n      break;\r\n    case UPLOAD_IMAGES_SUCCESS: {\r\n      draft.imagePaths = action.data;\r\n      draft.upLoadImagesLoading = false;\r\n      draft.upLoadImagesDone = true;\r\n      break;\r\n    }\r\n    case UPLOAD_IMAGES_FAILURE:\r\n      draft.upLoadImagesError = action.error;\r\n      draft.upLoadImagesLoading = false;\r\n      break;\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers.push({id: action.data.UserId});\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostError = action.error;\r\n      draft.likePostLoading = false;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unlikePostLoading = true;\r\n      draft.unlikePostDone = false;\r\n      draft.unlikePostError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostDone = true;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unlikePostError = action.error;\r\n      draft.unlikePostLoading = false;\r\n      break;\r\n    case LOAD_SPOST_REQUEST:\r\n      draft.loadSPostLoading = true;\r\n      draft.loadSPostDone = false;\r\n      draft.loadSPostError = null;\r\n      break;\r\n    case LOAD_SPOST_SUCCESS:\r\n      draft.singlePost = action.data;\r\n      draft.loadSPostLoading = false;\r\n      draft.loadSPostDone = true;\r\n      break;\r\n    case LOAD_SPOST_FAILURE:\r\n      draft.loadSPostError = action.error;\r\n      draft.loadSPostLoading = false;\r\n      break;\r\n    case LOAD_LIKED_POSTS_REQUEST:\r\n    case LOAD_RELATED_POST_REQUEST:\r\n    case LOAD_USER_POSTS_REQUEST:\r\n    case LOAD_HASHTAG_POSTS_REQUEST:\r\n    case LOAD_POST_REQUEST:\r\n      draft.loadPostLoading = true;\r\n      draft.loadPostDone = false;\r\n      draft.loadPostError = null;\r\n      break;\r\n    case LOAD_LIKED_POSTS_SUCCESS:\r\n    case LOAD_RELATED_POST_SUCCESS:\r\n    case LOAD_USER_POSTS_SUCCESS:\r\n    case LOAD_HASHTAG_POSTS_SUCCESS:\r\n    case LOAD_POST_SUCCESS:\r\n      if (draft.mainPosts.length > 0) { // SSR로 처음에 들고오는 경우가 아닐때\r\n        if (draft.mainPosts[0].category !== action.data[0].category //카테고리 , 지역이 일치하지 않을때\r\n          && draft.mainPosts[0].location !== action.data[0].location) {\r\n          draft.mainPosts = action.data; // 기존 배열 밀어버리고 새롭게 10개씩 넣는다.\r\n          // draft.mainPosts = draft.mainPosts.concat(action.data);\r\n        } else {\r\n          draft.mainPosts = draft.mainPosts.concat(action.data); // 같은속성의 게시물을 쌓고있는 경우\r\n        }\r\n      }\r\n      else {\r\n        draft.mainPosts = draft.mainPosts.concat(action.data); // SSR로 처음에 들고올때\r\n      }\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostDone = true;\r\n      draft.hasMorePost = action.data.length === 10;\r\n      break;\r\n    case LOAD_LIKED_POSTS_FAILURE:\r\n    case LOAD_RELATED_POST_FAILURE:\r\n    case LOAD_USER_POSTS_FAILURE:\r\n    case LOAD_HASHTAG_POSTS_FAILURE:\r\n    case LOAD_POST_FAILURE:\r\n      draft.loadPostError = action.error;\r\n      draft.loadPostLoading = false;\r\n      break;\r\n    case SEND_DUMMYPOST_REQUEST:\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case SEND_DUMMYPOST_SUCCESS:\r\n    case ADD_POST_SUCCESS:\r\n      draft.mainPosts.unshift(action.data);\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.imagePaths = [];\r\n      break;\r\n    case SEND_DUMMYPOST_FAILURE:\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostError = action.error;\r\n      draft.addPostLoading = false;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostError = action.error;\r\n      draft.removePostLoading = false;\r\n      break;\r\n    case MODIFY_POST_REQUEST:\r\n      draft.modifyPostLoading = true;\r\n      draft.modifyPostDone = false;\r\n      draft.modifyPostError = null;\r\n      break;\r\n    case MODIFY_POST_SUCCESS:\r\n      draft.mainPosts.find((v) => v.id === action.data.PostId).content = action.data.content;\r\n      draft.modifyPostLoading = false;\r\n      draft.modifyPostDone = true;\r\n      break;\r\n    case MODIFY_POST_FAILURE:\r\n      draft.modifyPostError = action.error;\r\n      draft.modifyPostLoading = false;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      break;\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}