{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\LocalRentalKing\\\\front\\\\pages\\\\search\\\\[searchInput].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport AppLayout from '../../components/AppLayout/AppLayout';\n\nfunction SearchResult() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    searchInput\n  } = router.query; // [tag].js 파일 명의 [] 부분이 들어간다\n\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading,\n    local\n  } = useSelector(state => state.post);\n  const {\n    userInfo,\n    me\n  } = useSelector(state => state.user);\n  const categoryAndsearch = searchInput.split('*');\n  const category = categoryAndsearch[0];\n  const search = categoryAndsearch[1]; // useEffect(()=>{\n  //   dispatch({ // 검색어를 제목에서 포함하며, 지역이 일치하는 게시물들을 10개씩요청\n  //     type:LOAD_SEARCH_POSTS_REQUEST,\n  //     data:searchInput,\n  //     local:local,\n  //   });\n  // },[searchInput]);\n  // useEffect(() => {\n  //   const onScroll = () => {\n  //     if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n  //       if (hasMorePost && !loadPostLoading) {\n  //         dispatch({\n  //           type: LOAD_SEARCH_POSTS_REQUEST, // 검색어를 제목에서 포함하며, 지역이 일치하는 게시물들을 10개씩요청\n  //           lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n  //           data:searchInput,\n  //           local:local,\n  //         });\n  //       }\n  //     }\n  //   };\n  //   window.addEventListener('scroll', onScroll);\n  //   return () => {\n  //     window.removeEventListener('scroll', onScroll);\n  //   };\n  // }, [mainPosts.length, hasMorePost, searchInput, loadPostLoading]);\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, searchInput);\n}\n\nexport default SearchResult;","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/pages/search/[searchInput].js"],"names":["React","useDispatch","useSelector","useRouter","AppLayout","SearchResult","dispatch","router","searchInput","query","mainPosts","hasMorePost","loadPostLoading","local","state","post","userInfo","me","user","categoryAndsearch","split","category","search"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBD,MAAM,CAACE,KAA/B,CAHsB,CAGgB;;AACtC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA,eAA1B;AAA4CC,IAAAA;AAA5C,MAAsDX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAvE;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAmBf,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACI,IAAlB,CAApC;AAEA,QAAMC,iBAAiB,GAAGX,WAAW,CAACY,KAAZ,CAAkB,GAAlB,CAA1B;AACA,QAAMC,QAAQ,GAAGF,iBAAiB,CAAC,CAAD,CAAlC;AACA,QAAMG,MAAM,GAAGH,iBAAiB,CAAC,CAAD,CAAhC,CATsB,CAWtB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,WADH,CADF;AAKD;;AAED,eAAeH,YAAf","sourcesContent":["import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useRouter} from 'next/router';\r\nimport AppLayout from '../../components/AppLayout/AppLayout';\r\n\r\nfunction SearchResult() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { searchInput } = router.query; // [tag].js 파일 명의 [] 부분이 들어간다\r\n  const { mainPosts, hasMorePost, loadPostLoading , local } = useSelector((state) => state.post);\r\n  const { userInfo, me } = useSelector((state) => state.user);\r\n\r\n  const categoryAndsearch = searchInput.split('*');\r\n  const category = categoryAndsearch[0];\r\n  const search = categoryAndsearch[1];\r\n\r\n  // useEffect(()=>{\r\n  //   dispatch({ // 검색어를 제목에서 포함하며, 지역이 일치하는 게시물들을 10개씩요청\r\n  //     type:LOAD_SEARCH_POSTS_REQUEST,\r\n  //     data:searchInput,\r\n  //     local:local,\r\n  //   });\r\n  // },[searchInput]);\r\n\r\n  // useEffect(() => {\r\n  //   const onScroll = () => {\r\n  //     if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n  //       if (hasMorePost && !loadPostLoading) {\r\n  //         dispatch({\r\n  //           type: LOAD_SEARCH_POSTS_REQUEST, // 검색어를 제목에서 포함하며, 지역이 일치하는 게시물들을 10개씩요청\r\n  //           lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n  //           data:searchInput,\r\n  //           local:local,\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   window.addEventListener('scroll', onScroll);\r\n  //   return () => {\r\n  //     window.removeEventListener('scroll', onScroll);\r\n  //   };\r\n  // }, [mainPosts.length, hasMorePost, searchInput, loadPostLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {searchInput}\r\n    </AppLayout>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}