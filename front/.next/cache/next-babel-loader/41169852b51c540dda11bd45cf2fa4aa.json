{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\LocalRentalKing\\\\front\\\\pages\\\\talentrecieve.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInView } from \"react-intersection-observer\";\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\nimport Tags from \"../components/Tags\";\nimport PostCard1 from \"../components/PostCard1\";\nimport Router from \"next/router\";\nimport Layout from \"../components/Layout\";\nimport { Button } from \"antd\";\nimport PostCard2 from \"../components/PostCard2\";\n\nfunction TalentRecieve() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      talent_TagsData = _useSelector2.talent_TagsData,\n      selectedTag = _useSelector2.selectedTag,\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostLoading = _useSelector2.loadPostLoading,\n      id = _useSelector2.id;\n\n  var _useState = useState(true),\n      view = _useState[0],\n      setView = _useState[1];\n\n  var onSwitch = useCallback(function () {\n    setView(!view);\n  }, [view]);\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n\n          console.log(selectedTag);\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: selectedTag,\n            boardNum: 3,\n            lastId: lastId\n          });\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\n\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostLoading]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"\\uD798\\uC744 \\uBE4C\\uB824\\uC918 | \\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\")), view ? __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(Tags, {\n    tagsData: talent_TagsData,\n    boardNum: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    onClick: onSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"\\uC804\\uD658\\uC2A4\\uC704\\uCE58\"), mainPosts.map(function (post) {\n    return __jsx(PostCard1, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 36\n      }\n    });\n  })) : __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Tags, {\n    tagsData: talent_TagsData,\n    boardNum: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    onClick: onSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"\\uC804\\uD658\\uC2A4\\uC704\\uCE58\"), mainPosts.map(function (post) {\n    return __jsx(PostCard2, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 36\n      }\n    });\n  })));\n}\n\n_s(TalentRecieve, \"d3bYuRnYX+FpFDVvS48hihRQyYQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TalentRecieve;\nexport var __N_SSP = true;\nexport default TalentRecieve;\n\nvar _c;\n\n$RefreshReg$(_c, \"TalentRecieve\");","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/pages/talentrecieve.js"],"names":["React","useCallback","useEffect","useState","Head","useDispatch","useSelector","useInView","AppLayout","LOAD_POST_REQUEST","Tags","PostCard1","Router","Layout","Button","PostCard2","TalentRecieve","dispatch","state","user","me","post","talent_TagsData","selectedTag","mainPosts","hasMorePost","loadPostLoading","id","view","setView","onSwitch","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","console","log","type","data","boardNum","addEventListener","removeEventListener","map"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport wrapper from '../store/configureStore';\r\nimport Head from 'next/head';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {END} from 'redux-saga';\r\nimport {useInView} from \"react-intersection-observer\";\r\n\r\nimport AppLayout from '../components/AppLayout/AppLayout';\r\n\r\nimport {LOAD_MY_INFO_REQUEST} from '../reducers/user';\r\nimport {LOAD_POST_REQUEST, UPDATE_TAG} from '../reducers/post';\r\nimport Tags from \"../components/Tags\";\r\nimport PostCard1 from \"../components/PostCard1\";\r\nimport Router from \"next/router\";\r\nimport Layout from \"../components/Layout\";\r\nimport {Button} from \"antd\";\r\nimport PostCard2 from \"../components/PostCard2\";\r\n\r\nfunction TalentRecieve() {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { talent_TagsData,selectedTag,mainPosts, hasMorePost, loadPostLoading, id } = useSelector((state) => state.post);\r\n  const [view,setView] = useState(true);\r\n\r\n  const onSwitch = useCallback(()=>{\r\n    setView(!view);\r\n  },[view]);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\r\n        if (hasMorePost && !loadPostLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\r\n          console.log(selectedTag);\r\n          dispatch({\r\n            type: LOAD_POST_REQUEST,\r\n            data:selectedTag,\r\n            boardNum:3,\r\n            lastId:lastId,\r\n          });\r\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [ hasMorePost, loadPostLoading]);\r\n\r\n  if (!me) {\r\n    return '내 정보 로딩중...';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>힘을 빌려줘 | 우리동네 렌탈대장</title>\r\n      </Head>\r\n      {view ? (\r\n        <Layout>\r\n          <Tags tagsData={talent_TagsData} boardNum={3}/>\r\n          <Button onClick={onSwitch}>전환스위치</Button>\r\n          {mainPosts.map((post) => <PostCard1 key={post.id} post={post}/>)}\r\n        </Layout>\r\n      ) : (\r\n        <Layout>\r\n          <Tags tagsData={talent_TagsData} boardNum={3}/>\r\n          <Button onClick={onSwitch}>전환스위치</Button>\r\n          {mainPosts.map((post) => <PostCard2 key={post.id} post={post}/>)}\r\n        </Layout>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: UPDATE_TAG,\r\n    data:\"전체\",\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data:\"전체\",\r\n    boardNum:3,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default TalentRecieve;\r\n"]},"metadata":{},"sourceType":"module"}