{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\LocalRentalKing\\\\front\\\\pages\\\\objectsend.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport wrapper from '../store/configureStore';\nimport Head from 'next/head';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport { useInView } from \"react-intersection-observer\";\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { LOAD_POST_REQUEST, UPDATE_TAG } from '../reducers/post';\nimport Tags from \"../components/Tags\";\nimport PostCard1 from \"../components/PostCard1\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport Layout from \"../components/Layout\";\nimport { Button } from \"antd\";\nimport PostCard2 from \"../components/PostCard2\";\n\nfunction ObjectSend() {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    selectedTag,\n    object_TagsData,\n    mainPosts,\n    hasMorePost,\n    loadPostLoading,\n    id\n  } = useSelector(state => state.post);\n  const {\n    0: view,\n    1: setView\n  } = useState(true);\n  const onSwitch = useCallback(() => {\n    setView(!view);\n  }, [view]);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n\n          console.log(selectedTag);\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: selectedTag,\n            boardNum: 2,\n            lastId: lastId\n          });\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\n\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostLoading]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"\\uBB3C\\uAC74\\uC744 \\uBE4C\\uB824\\uC904\\uAC8C | \\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\")), view ? __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(Tags, {\n    tagsData: object_TagsData,\n    boardNum: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    onClick: onSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"\\uC804\\uD658\\uC2A4\\uC704\\uCE58\"), mainPosts.map(post => __jsx(PostCard1, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 36\n    }\n  }))) : __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Tags, {\n    tagsData: object_TagsData,\n    boardNum: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    onClick: onSwitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"\\uC804\\uD658\\uC2A4\\uC704\\uCE58\"), mainPosts.map(post => __jsx(PostCard2, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 36\n    }\n  }))));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = cookie;\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: UPDATE_TAG,\n    data: \"전체\"\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: \"전체\",\n    boardNum: 2 // 물건을 빌려줄게\n\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default ObjectSend;","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/pages/objectsend.js"],"names":["React","useCallback","useEffect","useState","wrapper","Head","useDispatch","useSelector","END","useInView","AppLayout","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","UPDATE_TAG","Tags","PostCard1","axios","Router","Layout","Button","PostCard2","ObjectSend","dispatch","me","state","user","selectedTag","object_TagsData","mainPosts","hasMorePost","loadPostLoading","id","post","view","setView","onSwitch","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","console","log","type","data","boardNum","addEventListener","removeEventListener","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport wrapper from '../store/configureStore';\r\nimport Head from 'next/head';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {END} from 'redux-saga';\r\nimport {useInView} from \"react-intersection-observer\";\r\n\r\nimport AppLayout from '../components/AppLayout/AppLayout';\r\n\r\nimport {LOAD_MY_INFO_REQUEST} from '../reducers/user';\r\nimport {LOAD_POST_REQUEST, UPDATE_TAG} from '../reducers/post';\r\nimport Tags from \"../components/Tags\";\r\nimport PostCard1 from \"../components/PostCard1\";\r\nimport axios from \"axios\";\r\nimport Router from \"next/router\";\r\nimport Layout from \"../components/Layout\";\r\nimport {Button} from \"antd\";\r\nimport PostCard2 from \"../components/PostCard2\";\r\n\r\nfunction ObjectSend() {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { selectedTag,object_TagsData, mainPosts, hasMorePost, loadPostLoading, id } = useSelector((state) => state.post);\r\n  const [view, setView] = useState(true);\r\n\r\n  const onSwitch = useCallback(() => {\r\n    setView(!view);\r\n  }, [view]);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 100) {\r\n        if (hasMorePost && !loadPostLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\r\n          console.log(selectedTag);\r\n          dispatch({\r\n            type: LOAD_POST_REQUEST,\r\n            data:selectedTag,\r\n            boardNum:2,\r\n            lastId:lastId,\r\n          });\r\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [ hasMorePost, loadPostLoading]);\r\n\r\n  if (!me) {\r\n    return '내 정보 로딩중...';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>물건을 빌려줄게 | 우리동네 렌탈대장</title>\r\n      </Head>\r\n      {view ? (\r\n        <Layout>\r\n          <Tags tagsData={object_TagsData} boardNum={1}/>\r\n          <Button onClick={onSwitch}>전환스위치</Button>\r\n          {mainPosts.map((post) => <PostCard1 key={post.id} post={post}/>)}\r\n        </Layout>\r\n      ) : (\r\n        <Layout>\r\n          <Tags tagsData={object_TagsData} boardNum={1}/>\r\n          <Button onClick={onSwitch}>전환스위치</Button>\r\n          {mainPosts.map((post) => <PostCard2 key={post.id} post={post}/>)}\r\n        </Layout>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: UPDATE_TAG,\r\n    data:\"전체\",\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data:\"전체\",\r\n    boardNum:2, // 물건을 빌려줄게\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default ObjectSend;\r\n"]},"metadata":{},"sourceType":"module"}