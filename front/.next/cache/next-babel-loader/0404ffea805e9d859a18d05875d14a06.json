{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  object_TagsData: ['전체', '공구', 'Books', 'Music', 'Sports'],\n  talent_TagsData: ['전체', '공구', 'Books', 'Music', 'Sports'],\n  cooperate_tagsData: ['전체', '공구', 'Books', 'Music', 'Sports'],\n  play_tagsData: ['전체', '공구', 'Books', 'Music', 'Sports'],\n  selectedTag: null,\n  category: null,\n  searchResultId: null,\n  singlePost: null,\n  hasMorePost: true,\n  loadProfilePostLoading: false,\n  loadProfilePostDone: false,\n  loadProfilePostError: null,\n  upLoadImagesLoading: false,\n  upLoadImagesDone: false,\n  upLoadImagesError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadSPostLoading: false,\n  loadSPostDone: false,\n  loadSPostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadUserPostsLoading: false,\n  loadUserPostsDone: false,\n  loadUserPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  modifyPostLoading: false,\n  modifyPostDone: false,\n  modifyPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const LOAD_COOP_POST_REQUEST = 'LOAD_COOP_POST_REQUEST';\nexport const LOAD_COOP_POST_SUCCESS = 'LOAD_COOP_POST_SUCCESS';\nexport const LOAD_COOP_POST_FAILURE = 'LOAD_COOP_POST_FAILURE';\nexport const LOAD_PLAY_POST_REQUEST = 'LOAD_PLAY_POST_REQUEST';\nexport const LOAD_PLAY_POST_SUCCESS = 'LOAD_PLAY_POST_SUCCESS';\nexport const LOAD_PLAY_POST_FAILURE = 'LOAD_PLAY_POST_FAILURE';\nexport const LOAD_O_SEND_POST_REQUEST = 'LOAD_O_SEND_POST_REQUEST';\nexport const LOAD_O_SEND_POST_SUCCESS = 'LOAD_O_SEND_POST_SUCCESS';\nexport const LOAD_O_SEND_POST_FAILURE = 'LOAD_O_SEND_POST_FAILURE';\nexport const LOAD_O_RECIEVE_POST_REQUEST = 'LOAD_O_RECIEVE_POST_REQUEST';\nexport const LOAD_O_RECIEVE_POST_SUCCESS = 'LOAD_O_RECIEVE_POST_SUCCESS';\nexport const LOAD_O_RECIEVE_POST_FAILURE = 'LOAD_O_RECIEVE_POST_FAILURE';\nexport const LOAD_T_SEND_POST_REQUEST = 'LOAD_T_SEND_POST_REQUEST';\nexport const LOAD_T_SEND_POST_SUCCESS = 'LOAD_T_SEND_POST_SUCCESS';\nexport const LOAD_T_SEND_POST_FAILURE = 'LOAD_T_SEND_POST_FAILURE';\nexport const LOAD_T_RECIEVE_POST_REQUEST = 'LOAD_T_RECIEVE_POST_REQUEST';\nexport const LOAD_T_RECIEVE_POST_SUCCESS = 'LOAD_T_RECIEVE_POST_SUCCESS';\nexport const LOAD_T_RECIEVE_POST_FAILURE = 'LOAD_T_RECIEVE_POST_FAILURE';\nexport const MODIFY_POST_REQUEST = 'MODIFY_POST_REQUEST';\nexport const MODIFY_POST_SUCCESS = 'MODIFY_POST_SUCCESS';\nexport const MODIFY_POST_FAILURE = 'MODIFY_POST_FAILURE';\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport const LOAD_RELATED_POST_REQUEST = 'LOAD_RELATED_POST_REQUEST';\nexport const LOAD_RELATED_POST_SUCCESS = 'LOAD_RELATED_POST_SUCCESS';\nexport const LOAD_RELATED_POST_FAILURE = 'LOAD_RELATED_POST_FAILURE';\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport const LOAD_LIKED_POSTS_REQUEST = 'LOAD_LIKED_POSTS_REQUEST';\nexport const LOAD_LIKED_POSTS_SUCCESS = 'LOAD_LIKED_POSTS_SUCCESS';\nexport const LOAD_LIKED_POSTS_FAILURE = 'LOAD_LIKED_POSTS_FAILURE';\nexport const LOAD_SPOST_REQUEST = 'LOAD_SPOST_REQUEST';\nexport const LOAD_SPOST_SUCCESS = 'LOAD_SPOST_SUCCESS';\nexport const LOAD_SPOST_FAILURE = 'LOAD_SPOST_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const LOAD_PROFILE_POST_REQUEST = 'LOAD_PROFILE_POST_REQUEST';\nexport const LOAD_PROFILE_POST_SUCCESS = 'LOAD_PROFILE_POST_SUCCESS';\nexport const LOAD_PROFILE_POST_FAILURE = 'LOAD_PROFILE_POST_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const UPDATE_TAG = 'UPDATE_TAG';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n}); // (이전상태,액션) => 다음상태\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_PROFILE_POST_REQUEST:\n      draft.loadProfilePostLoading = true;\n      draft.loadProfilePostDone = false;\n      draft.loadProfilePostError = null;\n      break;\n\n    case LOAD_PROFILE_POST_SUCCESS:\n      {\n        if (draft.mainPosts[0].category === action.data[0].category) {\n          draft.mainPosts = draft.mainPosts.concat(action.data);\n        } else {\n          draft.mainPosts = action.data;\n        }\n\n        draft.loadProfilePostLoading = false;\n        draft.loadProfilePostDone = true;\n        break;\n      }\n\n    case LOAD_PROFILE_POST_FAILURE:\n      draft.loadProfilePostError = action.error;\n      draft.loadProfilePostLoading = false;\n      break;\n\n    case UPDATE_TAG:\n      draft.selectedTag = action.data;\n      break;\n\n    case REMOVE_IMAGE:\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n      break;\n\n    case UPLOAD_IMAGES_REQUEST:\n      draft.upLoadImagesLoading = true;\n      draft.upLoadImagesDone = false;\n      draft.upLoadImagesError = null;\n      break;\n\n    case UPLOAD_IMAGES_SUCCESS:\n      {\n        draft.imagePaths = action.data;\n        draft.upLoadImagesLoading = false;\n        draft.upLoadImagesDone = true;\n        break;\n      }\n\n    case UPLOAD_IMAGES_FAILURE:\n      draft.upLoadImagesError = action.error;\n      draft.upLoadImagesLoading = false;\n      break;\n\n    case LIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n\n    case LIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers.push({\n          id: action.data.UserId\n        });\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        break;\n      }\n\n    case LIKE_POST_FAILURE:\n      draft.likePostError = action.error;\n      draft.likePostLoading = false;\n      break;\n\n    case UNLIKE_POST_REQUEST:\n      draft.unlikePostLoading = true;\n      draft.unlikePostDone = false;\n      draft.unlikePostError = null;\n      break;\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n        draft.unlikePostLoading = false;\n        draft.unlikePostDone = true;\n        break;\n      }\n\n    case UNLIKE_POST_FAILURE:\n      draft.unlikePostError = action.error;\n      draft.unlikePostLoading = false;\n      break;\n\n    case LOAD_SPOST_REQUEST:\n      draft.loadSPostLoading = true;\n      draft.loadSPostDone = false;\n      draft.loadSPostError = null;\n      break;\n\n    case LOAD_SPOST_SUCCESS:\n      // draft.mainPosts = [dummyPost(action.data), ...state.mainPosts];\n      draft.singlePost = action.data;\n      draft.loadSPostLoading = false;\n      draft.loadSPostDone = true;\n      break;\n\n    case LOAD_SPOST_FAILURE:\n      draft.loadSPostError = action.error;\n      draft.loadSPostLoading = false;\n      break;\n\n    case LOAD_LIKED_POSTS_REQUEST:\n    case LOAD_RELATED_POST_REQUEST:\n    case LOAD_USER_POSTS_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_COOP_POST_REQUEST:\n    case LOAD_PLAY_POST_REQUEST:\n    case LOAD_O_SEND_POST_REQUEST:\n    case LOAD_O_RECIEVE_POST_REQUEST:\n    case LOAD_T_SEND_POST_REQUEST:\n    case LOAD_T_RECIEVE_POST_REQUEST:\n    case LOAD_POST_REQUEST:\n      draft.loadPostLoading = true;\n      draft.loadPostDone = false;\n      draft.loadPostError = null;\n      break;\n\n    case LOAD_LIKED_POSTS_SUCCESS:\n    case LOAD_RELATED_POST_SUCCESS:\n    case LOAD_USER_POSTS_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_COOP_POST_SUCCESS:\n    case LOAD_PLAY_POST_SUCCESS:\n    case LOAD_O_SEND_POST_SUCCESS:\n    case LOAD_O_RECIEVE_POST_SUCCESS:\n    case LOAD_T_SEND_POST_SUCCESS:\n    case LOAD_T_RECIEVE_POST_SUCCESS:\n    case LOAD_POST_SUCCESS:\n      draft.mainPosts = draft.mainPosts.filter(v => v.category === action.data[0].category); // 기존 있던 게시물들이랑 새 게시물의 카테고리를 비교해서 다를경우 다 지워버린다.\n\n      draft.mainPosts = draft.mainPosts.concat(action.data); // 가져온 게시물들을 삽입\n\n      draft.loadPostLoading = false;\n      draft.loadPostDone = true;\n      draft.hasMorePost = action.data.length === 10;\n      break;\n\n    case LOAD_LIKED_POSTS_FAILURE:\n    case LOAD_RELATED_POST_FAILURE:\n    case LOAD_USER_POSTS_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_COOP_POST_FAILURE:\n    case LOAD_PLAY_POST_FAILURE:\n    case LOAD_O_SEND_POST_FAILURE:\n    case LOAD_O_RECIEVE_POST_FAILURE:\n    case LOAD_T_SEND_POST_FAILURE:\n    case LOAD_T_RECIEVE_POST_FAILURE:\n    case LOAD_POST_FAILURE:\n      draft.loadPostError = action.error;\n      draft.loadPostLoading = false;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.mainPosts.unshift(action.data);\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.imagePaths = [];\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostError = action.error;\n      draft.addPostLoading = false;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostError = action.error;\n      draft.removePostLoading = false;\n      break;\n\n    case MODIFY_POST_REQUEST:\n      draft.modifyPostLoading = true;\n      draft.modifyPostDone = false;\n      draft.modifyPostError = null;\n      break;\n\n    case MODIFY_POST_SUCCESS:\n      draft.mainPosts.find(v => v.id === action.data.PostId).content = action.data.content;\n      draft.modifyPostLoading = false;\n      draft.modifyPostDone = true;\n      break;\n\n    case MODIFY_POST_FAILURE:\n      draft.modifyPostError = action.error;\n      draft.modifyPostLoading = false;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","object_TagsData","talent_TagsData","cooperate_tagsData","play_tagsData","selectedTag","category","searchResultId","singlePost","hasMorePost","loadProfilePostLoading","loadProfilePostDone","loadProfilePostError","upLoadImagesLoading","upLoadImagesDone","upLoadImagesError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadSPostLoading","loadSPostDone","loadSPostError","loadPostLoading","loadPostDone","loadPostError","loadUserPostsLoading","loadUserPostsDone","loadUserPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","modifyPostLoading","modifyPostDone","modifyPostError","addCommentLoading","addCommentDone","addCommentError","LOAD_COOP_POST_REQUEST","LOAD_COOP_POST_SUCCESS","LOAD_COOP_POST_FAILURE","LOAD_PLAY_POST_REQUEST","LOAD_PLAY_POST_SUCCESS","LOAD_PLAY_POST_FAILURE","LOAD_O_SEND_POST_REQUEST","LOAD_O_SEND_POST_SUCCESS","LOAD_O_SEND_POST_FAILURE","LOAD_O_RECIEVE_POST_REQUEST","LOAD_O_RECIEVE_POST_SUCCESS","LOAD_O_RECIEVE_POST_FAILURE","LOAD_T_SEND_POST_REQUEST","LOAD_T_SEND_POST_SUCCESS","LOAD_T_SEND_POST_FAILURE","LOAD_T_RECIEVE_POST_REQUEST","LOAD_T_RECIEVE_POST_SUCCESS","LOAD_T_RECIEVE_POST_FAILURE","MODIFY_POST_REQUEST","MODIFY_POST_SUCCESS","MODIFY_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_RELATED_POST_REQUEST","LOAD_RELATED_POST_SUCCESS","LOAD_RELATED_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_LIKED_POSTS_REQUEST","LOAD_LIKED_POSTS_SUCCESS","LOAD_LIKED_POSTS_FAILURE","LOAD_SPOST_REQUEST","LOAD_SPOST_SUCCESS","LOAD_SPOST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_PROFILE_POST_REQUEST","LOAD_PROFILE_POST_SUCCESS","LOAD_PROFILE_POST_FAILURE","REMOVE_IMAGE","UPDATE_TAG","addPost","data","type","addComment","reducer","state","action","draft","concat","error","filter","v","i","post","find","id","PostId","Likers","push","UserId","length","unshift","content","Comments"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  object_TagsData : ['전체','공구', 'Books', 'Music', 'Sports'],\r\n  talent_TagsData : ['전체','공구', 'Books', 'Music', 'Sports'],\r\n  cooperate_tagsData : ['전체','공구', 'Books', 'Music', 'Sports'],\r\n  play_tagsData : ['전체','공구', 'Books', 'Music', 'Sports'],\r\n  selectedTag:null,\r\n  category:null,\r\n  searchResultId:null,\r\n  singlePost: null,\r\n  hasMorePost: true,\r\n  loadProfilePostLoading: false,\r\n  loadProfilePostDone: false,\r\n  loadProfilePostError: null,\r\n  upLoadImagesLoading: false,\r\n  upLoadImagesDone: false,\r\n  upLoadImagesError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadSPostLoading: false,\r\n  loadSPostDone: false,\r\n  loadSPostError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  loadUserPostsLoading: false,\r\n  loadUserPostsDone: false,\r\n  loadUserPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  modifyPostLoading: false,\r\n  modifyPostDone: false,\r\n  modifyPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const LOAD_COOP_POST_REQUEST = 'LOAD_COOP_POST_REQUEST';\r\nexport const LOAD_COOP_POST_SUCCESS = 'LOAD_COOP_POST_SUCCESS';\r\nexport const LOAD_COOP_POST_FAILURE = 'LOAD_COOP_POST_FAILURE';\r\n\r\nexport const LOAD_PLAY_POST_REQUEST = 'LOAD_PLAY_POST_REQUEST';\r\nexport const LOAD_PLAY_POST_SUCCESS = 'LOAD_PLAY_POST_SUCCESS';\r\nexport const LOAD_PLAY_POST_FAILURE = 'LOAD_PLAY_POST_FAILURE';\r\n\r\nexport const LOAD_O_SEND_POST_REQUEST = 'LOAD_O_SEND_POST_REQUEST';\r\nexport const LOAD_O_SEND_POST_SUCCESS = 'LOAD_O_SEND_POST_SUCCESS';\r\nexport const LOAD_O_SEND_POST_FAILURE = 'LOAD_O_SEND_POST_FAILURE';\r\n\r\nexport const LOAD_O_RECIEVE_POST_REQUEST = 'LOAD_O_RECIEVE_POST_REQUEST';\r\nexport const LOAD_O_RECIEVE_POST_SUCCESS = 'LOAD_O_RECIEVE_POST_SUCCESS';\r\nexport const LOAD_O_RECIEVE_POST_FAILURE = 'LOAD_O_RECIEVE_POST_FAILURE';\r\n\r\nexport const LOAD_T_SEND_POST_REQUEST = 'LOAD_T_SEND_POST_REQUEST';\r\nexport const LOAD_T_SEND_POST_SUCCESS = 'LOAD_T_SEND_POST_SUCCESS';\r\nexport const LOAD_T_SEND_POST_FAILURE = 'LOAD_T_SEND_POST_FAILURE';\r\n\r\nexport const LOAD_T_RECIEVE_POST_REQUEST = 'LOAD_T_RECIEVE_POST_REQUEST';\r\nexport const LOAD_T_RECIEVE_POST_SUCCESS = 'LOAD_T_RECIEVE_POST_SUCCESS';\r\nexport const LOAD_T_RECIEVE_POST_FAILURE = 'LOAD_T_RECIEVE_POST_FAILURE';\r\n\r\nexport const MODIFY_POST_REQUEST = 'MODIFY_POST_REQUEST';\r\nexport const MODIFY_POST_SUCCESS = 'MODIFY_POST_SUCCESS';\r\nexport const MODIFY_POST_FAILURE = 'MODIFY_POST_FAILURE';\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const LOAD_RELATED_POST_REQUEST = 'LOAD_RELATED_POST_REQUEST';\r\nexport const LOAD_RELATED_POST_SUCCESS = 'LOAD_RELATED_POST_SUCCESS';\r\nexport const LOAD_RELATED_POST_FAILURE = 'LOAD_RELATED_POST_FAILURE';\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_LIKED_POSTS_REQUEST = 'LOAD_LIKED_POSTS_REQUEST';\r\nexport const LOAD_LIKED_POSTS_SUCCESS = 'LOAD_LIKED_POSTS_SUCCESS';\r\nexport const LOAD_LIKED_POSTS_FAILURE = 'LOAD_LIKED_POSTS_FAILURE';\r\n\r\nexport const LOAD_SPOST_REQUEST = 'LOAD_SPOST_REQUEST';\r\nexport const LOAD_SPOST_SUCCESS = 'LOAD_SPOST_SUCCESS';\r\nexport const LOAD_SPOST_FAILURE = 'LOAD_SPOST_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const LOAD_PROFILE_POST_REQUEST = 'LOAD_PROFILE_POST_REQUEST';\r\nexport const LOAD_PROFILE_POST_SUCCESS = 'LOAD_PROFILE_POST_SUCCESS';\r\nexport const LOAD_PROFILE_POST_FAILURE = 'LOAD_PROFILE_POST_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n\r\nexport const UPDATE_TAG = 'UPDATE_TAG';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\n// (이전상태,액션) => 다음상태\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOAD_PROFILE_POST_REQUEST:\r\n      draft.loadProfilePostLoading = true;\r\n      draft.loadProfilePostDone = false;\r\n      draft.loadProfilePostError = null;\r\n      break;\r\n    case LOAD_PROFILE_POST_SUCCESS: {\r\n      if(draft.mainPosts[0].category === action.data[0].category) {\r\n        draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      }\r\n      else {\r\n        draft.mainPosts = action.data;\r\n      }\r\n      draft.loadProfilePostLoading = false;\r\n      draft.loadProfilePostDone = true;\r\n      break;\r\n    }\r\n    case LOAD_PROFILE_POST_FAILURE:\r\n      draft.loadProfilePostError = action.error;\r\n      draft.loadProfilePostLoading = false;\r\n      break;\r\n    case UPDATE_TAG:\r\n      draft.selectedTag = action.data;\r\n      break;\r\n    case REMOVE_IMAGE:\r\n      draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n      break;\r\n    case UPLOAD_IMAGES_REQUEST:\r\n      draft.upLoadImagesLoading = true;\r\n      draft.upLoadImagesDone = false;\r\n      draft.upLoadImagesError = null;\r\n      break;\r\n    case UPLOAD_IMAGES_SUCCESS: {\r\n      draft.imagePaths = action.data;\r\n      draft.upLoadImagesLoading = false;\r\n      draft.upLoadImagesDone = true;\r\n      break;\r\n    }\r\n    case UPLOAD_IMAGES_FAILURE:\r\n      draft.upLoadImagesError = action.error;\r\n      draft.upLoadImagesLoading = false;\r\n      break;\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers.push({ id: action.data.UserId });\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostError = action.error;\r\n      draft.likePostLoading = false;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unlikePostLoading = true;\r\n      draft.unlikePostDone = false;\r\n      draft.unlikePostError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostDone = true;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unlikePostError = action.error;\r\n      draft.unlikePostLoading = false;\r\n      break;\r\n    case LOAD_SPOST_REQUEST:\r\n      draft.loadSPostLoading = true;\r\n      draft.loadSPostDone = false;\r\n      draft.loadSPostError = null;\r\n      break;\r\n    case LOAD_SPOST_SUCCESS:\r\n      // draft.mainPosts = [dummyPost(action.data), ...state.mainPosts];\r\n      draft.singlePost = action.data;\r\n      draft.loadSPostLoading = false;\r\n      draft.loadSPostDone = true;\r\n      break;\r\n    case LOAD_SPOST_FAILURE:\r\n      draft.loadSPostError = action.error;\r\n      draft.loadSPostLoading = false;\r\n      break;\r\n    case LOAD_LIKED_POSTS_REQUEST:\r\n    case LOAD_RELATED_POST_REQUEST:\r\n    case LOAD_USER_POSTS_REQUEST:\r\n    case LOAD_HASHTAG_POSTS_REQUEST:\r\n    case LOAD_COOP_POST_REQUEST:\r\n    case LOAD_PLAY_POST_REQUEST:\r\n    case LOAD_O_SEND_POST_REQUEST:\r\n    case LOAD_O_RECIEVE_POST_REQUEST:\r\n    case LOAD_T_SEND_POST_REQUEST:\r\n    case LOAD_T_RECIEVE_POST_REQUEST:\r\n    case LOAD_POST_REQUEST:\r\n      draft.loadPostLoading = true;\r\n      draft.loadPostDone = false;\r\n      draft.loadPostError = null;\r\n      break;\r\n    case LOAD_LIKED_POSTS_SUCCESS:\r\n    case LOAD_RELATED_POST_SUCCESS:\r\n    case LOAD_USER_POSTS_SUCCESS:\r\n    case LOAD_HASHTAG_POSTS_SUCCESS:\r\n    case LOAD_COOP_POST_SUCCESS:\r\n    case LOAD_PLAY_POST_SUCCESS:\r\n    case LOAD_O_SEND_POST_SUCCESS:\r\n    case LOAD_O_RECIEVE_POST_SUCCESS:\r\n    case LOAD_T_SEND_POST_SUCCESS:\r\n    case LOAD_T_RECIEVE_POST_SUCCESS:\r\n    case LOAD_POST_SUCCESS:\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.category === action.data[0].category);\r\n      // 기존 있던 게시물들이랑 새 게시물의 카테고리를 비교해서 다를경우 다 지워버린다.\r\n      draft.mainPosts = draft.mainPosts.concat(action.data);\r\n      // 가져온 게시물들을 삽입\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostDone = true;\r\n      draft.hasMorePost = action.data.length === 10;\r\n      break;\r\n    case LOAD_LIKED_POSTS_FAILURE:\r\n    case LOAD_RELATED_POST_FAILURE:\r\n    case LOAD_USER_POSTS_FAILURE:\r\n    case LOAD_HASHTAG_POSTS_FAILURE:\r\n    case LOAD_COOP_POST_FAILURE:\r\n    case LOAD_PLAY_POST_FAILURE:\r\n    case LOAD_O_SEND_POST_FAILURE:\r\n    case LOAD_O_RECIEVE_POST_FAILURE:\r\n    case LOAD_T_SEND_POST_FAILURE:\r\n    case LOAD_T_RECIEVE_POST_FAILURE:\r\n    case LOAD_POST_FAILURE:\r\n      draft.loadPostError = action.error;\r\n      draft.loadPostLoading = false;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.mainPosts.unshift(action.data);\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.imagePaths = [];\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostError = action.error;\r\n      draft.addPostLoading = false;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostError = action.error;\r\n      draft.removePostLoading = false;\r\n      break;\r\n    case MODIFY_POST_REQUEST:\r\n      draft.modifyPostLoading = true;\r\n      draft.modifyPostDone = false;\r\n      draft.modifyPostError = null;\r\n      break;\r\n    case MODIFY_POST_SUCCESS:\r\n      draft.mainPosts.find((v) => v.id === action.data.PostId).content = action.data.content;\r\n      draft.modifyPostLoading = false;\r\n      draft.modifyPostDone = true;\r\n      break;\r\n    case MODIFY_POST_FAILURE:\r\n      draft.modifyPostError = action.error;\r\n      draft.modifyPostLoading = false;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      break;\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}