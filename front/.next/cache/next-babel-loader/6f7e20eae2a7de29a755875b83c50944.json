{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\study\\\\LocalRentalKing\\\\front\\\\pages\\\\cooperate.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInView } from \"react-intersection-observer\";\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport { LOAD_PLAY_POST_REQUEST, LOAD_POST_REQUEST } from '../reducers/post';\nimport Tags from \"../components/Tags\";\nimport PostCard1 from \"../components/PostCard1\";\n\nfunction Cooperate() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n\n  var _useInView = useInView(),\n      _useInView2 = _slicedToArray(_useInView, 2),\n      ref = _useInView2[0],\n      inView = _useInView2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      cooperate_tagsData = _useSelector2.cooperate_tagsData,\n      selectedTag = _useSelector2.selectedTag,\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost,\n      loadPostLoading = _useSelector2.loadPostLoading,\n      id = _useSelector2.id;\n\n  useEffect(function () {\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n\n          console.log(selectedTag);\n          dispatch({\n            type: LOAD_POST_REQUEST,\n            data: selectedTag,\n            boardNum: 5,\n            lastId: lastId\n          });\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\n\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostLoading]);\n\n  if (!me) {\n    return '내 정보 로딩중...';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"\\uAC19\\uC774 \\uD558\\uC790 | \\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\")), __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(Tags, {\n    tagsData: cooperate_tagsData,\n    boardNum: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard1, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 34\n      }\n    });\n  })));\n}\n\n_s(Cooperate, \"EZnUf1Y7OqBmy2z1tDZg85S2IpU=\", false, function () {\n  return [useDispatch, useInView, useSelector, useSelector];\n});\n\n_c = Cooperate;\nexport var __N_SSP = true;\nexport default Cooperate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cooperate\");","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/pages/cooperate.js"],"names":["React","useCallback","useEffect","useState","Head","useDispatch","useSelector","useInView","AppLayout","LOAD_PLAY_POST_REQUEST","LOAD_POST_REQUEST","Tags","PostCard1","Cooperate","dispatch","ref","inView","state","user","me","post","cooperate_tagsData","selectedTag","mainPosts","hasMorePost","loadPostLoading","id","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","console","log","type","data","boardNum","addEventListener","removeEventListener","map"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport wrapper from '../store/configureStore';\r\nimport Head from 'next/head';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nimport AppLayout from '../components/AppLayout/AppLayout';\r\n\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport {LOAD_PLAY_POST_REQUEST, LOAD_POST_REQUEST, UPDATE_TAG} from '../reducers/post';\r\nimport Tags from \"../components/Tags\";\r\nimport PostCard1 from \"../components/PostCard1\";\r\n\r\nfunction Cooperate() {\r\n  const dispatch = useDispatch();\r\n  const [ref, inView] = useInView();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { cooperate_tagsData,selectedTag,mainPosts, hasMorePost, loadPostLoading, id } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePost && !loadPostLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\r\n          console.log(selectedTag);\r\n          dispatch({\r\n            type: LOAD_POST_REQUEST,\r\n            data:selectedTag,\r\n            boardNum:5,\r\n            lastId:lastId,\r\n          });\r\n        } // 지역변수를 건드려봣자 어차피 렌더링이 되지 않는다. 실제 동작으로 테스트 해야할듯\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [ hasMorePost, loadPostLoading]);\r\n\r\n  if (!me) {\r\n    return '내 정보 로딩중...';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>같이 하자 | 우리동네 렌탈대장</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <Tags tagsData={cooperate_tagsData} boardNum={5}/>\r\n        {mainPosts.map((post) => <PostCard1 key={post.id} post={post} />)}\r\n      </AppLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = cookie;\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) { // 타 유저간 쿠키가 공유되는 문제를 방지하기 위함\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: UPDATE_TAG,\r\n    data:\"전체\",\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data:\"전체\",\r\n    boardNum:5,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Cooperate;\r\n"]},"metadata":{},"sourceType":"module"}