{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\LocalRentalKing\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport wrapper from '../store/configureStore';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInView } from 'react-intersection-observer';\nimport { END } from 'redux-saga';\nimport { Button, Col, Row } from 'antd';\nimport { Tag } from 'antd';\nimport AppLayout from '../components/AppLayout/AppLayout';\nimport LoginForm from '../components/LoginForm';\nimport { LOAD_MY_INFO_REQUEST, logoutRequestAction } from '../reducers/user';\nimport { LOAD_POST_REQUEST, TEST, UPDATE_TAG } from '../reducers/post';\nimport Tags from \"../components/Tags\";\nimport PostCard from \"../components/PostCard\";\nimport PostCard1 from \"../components/DH/PostCard1\";\nimport PostForm from \"../components/DH/PostForm\";\nimport SearchLocation from \"../components/SearchLocation\";\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostLoading,\n    reTweetError,\n    id,\n    object_TagsData,\n    selectedTag\n  } = useSelector(state => state.post);\n  const [ref, inView] = useInView();\n  const string = \"abc*def*123\";\n  const split = string.split(\"*\");\n  console.log(split);\n  const post1 = [{\n    Id: 1,\n    category: \"공구\",\n    boardNum: 1,\n    price: 4000,\n    title: \"포스트 카드 1번\",\n    content: \"ㄱ\",\n    images: [],\n    userId: 1,\n    nickname: \"김도원\"\n  }, {\n    Id: 2,\n    userId: 1,\n    nickname: \"김도원\",\n    price: 5000,\n    title: \"포스트 카드 2번\",\n    content: \"ㄴ\",\n    images: []\n  }, {\n    Id: 3,\n    userId: 1,\n    nickname: \"김도원\",\n    price: 6000,\n    title: \"포스트 카드 3번\",\n    content: \"ㄷ\",\n    images: []\n  }, {\n    Id: 4,\n    userId: 1,\n    nickname: \"김도원\",\n    price: 2000,\n    title: \"포스트 카드 4번\",\n    content: \"ㄹ\",\n    images: []\n  }, {\n    Id: 5,\n    userId: 1,\n    nickname: \"김도원\",\n    price: 1000,\n    title: \"포스트 카드 5번\",\n    content: \"ㅁ\",\n    images: []\n  }, {\n    Id: 6,\n    userId: 1,\n    nickname: \"김도원\",\n    price: 6000,\n    title: \"포스트 카드 6번\",\n    content: \"ㅂ\",\n    images: []\n  }, {\n    Id: 7,\n    userId: 1,\n    nickname: \"김도원\",\n    price: 4000,\n    title: \"포스트 카드 7번\",\n    content: \"ㅅ\",\n    images: []\n  }, {\n    Id: 8,\n    userId: 1,\n    nickname: \"김도원\",\n    price: 3000,\n    title: \"포스트 카드 8번\",\n    content: \"ㅇ\",\n    images: []\n  }, {\n    Id: 9,\n    userId: 1,\n    nickname: \"김도원\",\n    price: 6000,\n    title: \"포스트 카드 9번\",\n    content: \"ㅈ\",\n    images: []\n  }, {\n    Id: 10,\n    userId: 1,\n    nickname: \"김도원\",\n    price: 2000,\n    title: \"포스트 카드 10번\",\n    content: \"ㅋ\",\n    images: \"\"\n  }]; // postId 자동생성 category,boardNum,price,title,content,Images, me.userId,me.nickname를 dispatch로 전송하여 db에 저장한다.\n  // useEffect( // 화면 사이즈에 따라 버그가 발생중 fix1\n  //   () => {\n  //     if (inView && hasMorePost && !loadPostLoading) {\n  //       const lastId = mainPosts[mainPosts.length - 1]?.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\n  //       dispatch({\n  //         type: LOAD_POST_REQUEST,\n  //         data:selectedTag,\n  //         boardNum:1,\n  //         lastId, // 게시물 10개를 요청하고 인피니트 스크롤 구현을 위해 lastId를 전송하여 lastId 기준으로 10개를 잘라 받아온다.\n  //       });\n  //       console.log(\"선택 된 태그:\"+selectedTag);\n  //     }\n  //   },[inView, hasMorePost, loadPostLoading, mainPosts, id]);\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, me ? __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(Tags, {\n    tagsData: object_TagsData,\n    boardNum: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), post1.map(post => __jsx(PostCard1, {\n    key: post.nickname,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 30\n    }\n  })), __jsx(\"div\", {\n    ref: hasMorePost && !loadPostLoading ? ref : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })) : __jsx(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    xs: 6,\n    md: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"main.png\",\n    style: {\n      height: 950\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    xs: 14,\n    md: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"\\uC6B0\\uB9AC\\uB3D9\\uB124 \\uB80C\\uD0C8\\uB300\\uC7A5\\uC744 \\uC9C0\\uAE08 \\uC774\\uC6A9\\uD574 \\uBCF4\\uC138\\uC694!\"), __jsx(LoginForm, {\n    style: {\n      marginTop: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    xs: 2,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: UPDATE_TAG,\n    data: \"전체\"\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: \"전체\",\n    boardNum: 1\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/pages/index.js"],"names":["React","useCallback","useEffect","useState","wrapper","axios","useDispatch","useSelector","useInView","END","Button","Col","Row","Tag","AppLayout","LoginForm","LOAD_MY_INFO_REQUEST","logoutRequestAction","LOAD_POST_REQUEST","TEST","UPDATE_TAG","Tags","PostCard","PostCard1","PostForm","SearchLocation","Home","dispatch","me","state","user","mainPosts","hasMorePost","loadPostLoading","reTweetError","id","object_TagsData","selectedTag","post","ref","inView","string","split","console","log","post1","Id","category","boardNum","price","title","content","images","userId","nickname","map","undefined","height","marginTop","getServerSideProps","context","cookie","req","headers","store","type","data","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport wrapper from '../store/configureStore';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { END } from 'redux-saga';\r\nimport {Button, Col, Row} from 'antd';\r\nimport { Tag } from 'antd';\r\n\r\n\r\nimport AppLayout from '../components/AppLayout/AppLayout';\r\nimport LoginForm from '../components/LoginForm';\r\n\r\nimport {LOAD_MY_INFO_REQUEST, logoutRequestAction} from '../reducers/user';\r\nimport {LOAD_POST_REQUEST, TEST, UPDATE_TAG} from '../reducers/post';\r\nimport Tags from \"../components/Tags\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostCard1 from \"../components/DH/PostCard1\";\r\nimport PostForm from \"../components/DH/PostForm\";\r\nimport SearchLocation from \"../components/SearchLocation\";\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePost, loadPostLoading, reTweetError, id , object_TagsData , selectedTag } = useSelector((state) => state.post);\r\n  const [ref, inView] = useInView();\r\n\r\n  const string = \"abc*def*123\";\r\n  const split = string.split(\"*\");\r\n\r\n  console.log(split);\r\n\r\n  const post1 = [\r\n    {Id:1,category:\"공구\",boardNum:1,price:4000,title:\"포스트 카드 1번\",content:\"ㄱ\",images:[],userId:1,nickname:\"김도원\"},\r\n    {Id:2,userId:1,nickname:\"김도원\",price:5000,title:\"포스트 카드 2번\",content:\"ㄴ\",images:[]},\r\n    {Id:3,userId:1,nickname:\"김도원\",price:6000,title:\"포스트 카드 3번\",content:\"ㄷ\",images:[]},\r\n    {Id:4,userId:1,nickname:\"김도원\",price:2000,title:\"포스트 카드 4번\",content:\"ㄹ\",images:[]},\r\n    {Id:5,userId:1,nickname:\"김도원\",price:1000,title:\"포스트 카드 5번\",content:\"ㅁ\",images:[]},\r\n    {Id:6,userId:1,nickname:\"김도원\",price:6000,title:\"포스트 카드 6번\",content:\"ㅂ\",images:[]},\r\n    {Id:7,userId:1,nickname:\"김도원\",price:4000,title:\"포스트 카드 7번\",content:\"ㅅ\",images:[]},\r\n    {Id:8,userId:1,nickname:\"김도원\",price:3000,title:\"포스트 카드 8번\",content:\"ㅇ\",images:[]},\r\n    {Id:9,userId:1,nickname:\"김도원\",price:6000,title:\"포스트 카드 9번\",content:\"ㅈ\",images:[]},\r\n    {Id:10,userId:1,nickname:\"김도원\",price:2000,title:\"포스트 카드 10번\",content:\"ㅋ\",images:\"\"},\r\n  ]; // postId 자동생성 category,boardNum,price,title,content,Images, me.userId,me.nickname를 dispatch로 전송하여 db에 저장한다.\r\n\r\n  // useEffect( // 화면 사이즈에 따라 버그가 발생중 fix1\r\n  //   () => {\r\n  //     if (inView && hasMorePost && !loadPostLoading) {\r\n  //       const lastId = mainPosts[mainPosts.length - 1]?.id; // 인피니트 스크롤 구현을 위해 프론트 서버의 현재 렌더링중인 게시글들중 가장 아래 게시물의 게시넘버를 lastId로\r\n  //       dispatch({\r\n  //         type: LOAD_POST_REQUEST,\r\n  //         data:selectedTag,\r\n  //         boardNum:1,\r\n  //         lastId, // 게시물 10개를 요청하고 인피니트 스크롤 구현을 위해 lastId를 전송하여 lastId 기준으로 10개를 잘라 받아온다.\r\n  //       });\r\n  //       console.log(\"선택 된 태그:\"+selectedTag);\r\n  //     }\r\n  //   },[inView, hasMorePost, loadPostLoading, mainPosts, id]);\r\n\r\n  return (\r\n    <div>{me ? (\r\n      <AppLayout>\r\n        {/*<Button onClick={}> 로그아웃</Button>*/}\r\n        <Tags tagsData={object_TagsData} boardNum={1}/>\r\n        {post1.map((post) => <PostCard1 key={post.nickname} post={post}/>)}\r\n        {/*{mainPosts.map((post) => <PostCard key={post.id} post={post} />)}*/}\r\n        <div ref={hasMorePost && !loadPostLoading ? ref : undefined} />\r\n      {/* 아직 게시물을 전부 열람하지 않았고 && 게시물을 요청하는 중이 아닐경우 인피니트 스크롤 동작 : 아닐경우 undefined */}\r\n      </AppLayout>\r\n    ) : (\r\n      <Row gutter={8}>\r\n        <Col xs={6} md={10}>\r\n          <img src=\"main.png\" style={{ height: 950 }}/>\r\n        </Col>\r\n        <Col xs={14} md={10}>\r\n          <h1>우리동네 렌탈대장을 지금 이용해 보세요!</h1>\r\n          <LoginForm style={{ marginTop: 300 }} />\r\n        </Col>\r\n        <Col xs={2} md={4}>\r\n        </Col>\r\n      </Row>\r\n    )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: UPDATE_TAG,\r\n    data:\"전체\",\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data:\"전체\",\r\n    boardNum:1,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}