{"ast":null,"code":"import { all, call, fork, put, takeLatest, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_LIKED_POSTS_FAILURE, LOAD_LIKED_POSTS_REQUEST, LOAD_LIKED_POSTS_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_RELATED_POST_FAILURE, LOAD_RELATED_POST_REQUEST, LOAD_RELATED_POST_SUCCESS, LOAD_COOP_POST_REQUEST, LOAD_COOP_POST_SUCCESS, LOAD_COOP_POST_FAILURE, LOAD_PLAY_POST_REQUEST, LOAD_PLAY_POST_SUCCESS, LOAD_PLAY_POST_FAILURE, LOAD_O_SEND_POST_REQUEST, LOAD_O_SEND_POST_SUCCESS, LOAD_O_SEND_POST_FAILURE, LOAD_O_RECIEVE_POST_REQUEST, LOAD_O_RECIEVE_POST_SUCCESS, LOAD_O_RECIEVE_POST_FAILURE, LOAD_T_SEND_POST_REQUEST, LOAD_T_SEND_POST_SUCCESS, LOAD_T_SEND_POST_FAILURE, LOAD_T_RECIEVE_POST_REQUEST, LOAD_T_RECIEVE_POST_SUCCESS, LOAD_T_RECIEVE_POST_FAILURE, LOAD_SPOST_FAILURE, LOAD_SPOST_REQUEST, LOAD_SPOST_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, MODIFY_POST_FAILURE, MODIFY_POST_REQUEST, MODIFY_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data); // formdata 전송\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`); // delete는 데이터를 가져갈 수 없다 data는 postId\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  // 스위치 문을 통해서 각 카테고리들을 코드로 변경하여 넣어주자!\n  var category = null;\n\n  switch (data.category) {\n    case \"전체\":\n      break;\n\n    default:\n  }\n\n  return axios.post(`/posts?lastId=${data.lastId || 0}`, data);\n}\n\nfunction* loadPost(action) {\n  // 일반게시물 불러오기\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadSPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadSPost(action) {\n  try {\n    const result = yield call(loadSPostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_SPOST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_SPOST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LIKE_POST_SUCCESS,\n      data: result.data // PostId,UserId\n\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data // PostId,UserId\n\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data); // formdata는 { name: data } 같은 식으로 감싸버리면 json으로 자동 변환되버린다.\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`); // api 서버 요청은 /user/:userId/posts\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction RelatedPostAPI(lastId) {\n  return axios.get(`/posts/related?lastId=${lastId || 0}`);\n}\n\nfunction* RelatedPost(action) {\n  try {\n    const result = yield call(RelatedPostAPI, action.data, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_RELATED_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_RELATED_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadLikedPostsAPI(data, lastId) {\n  return axios.get(`/liked?lastId=${lastId || 0}`);\n}\n\nfunction* loadLikedPosts(action) {\n  try {\n    const result = yield call(loadLikedPostsAPI, action.data, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 비슷하게 본다\n      type: LOAD_LIKED_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_LIKED_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction modifyPostAPI(data) {\n  return axios.patch(`/post/${data.PostId}`, data);\n}\n\nfunction* modifyPost(action) {\n  try {\n    const result = yield call(modifyPostAPI, action.data);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: MODIFY_POST_SUCCESS,\n      data: result.data // PostId,UserId\n\n    });\n  } catch (err) {\n    yield put({\n      type: MODIFY_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadCoopPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadCoopPosts(action) {\n  try {\n    const result = yield call(loadCoopPostsAPI, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadPlayPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPlayPosts(action) {\n  try {\n    const result = yield call(loadPlayPostsAPI, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadoSendPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadoSendPosts(action) {\n  try {\n    const result = yield call(loadoSendPostsAPI, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadoRecievePostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadoRecievePosts(action) {\n  try {\n    const result = yield call(loadoRecievePostsAPI, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadtSendPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadtSendPosts(action) {\n  try {\n    const result = yield call(loadtSendPostsAPI, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadtRecievePostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadtRecievePosts(action) {\n  try {\n    const result = yield call(loadtRecievePostsAPI, action.lastId);\n    yield put({\n      // put이 액션을 dispatch하는 역할과 빗슷하게 본다\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchLoadSPost() {\n  yield takeLatest(LOAD_SPOST_REQUEST, loadSPost);\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchModifyPost() {\n  yield takeLatest(MODIFY_POST_REQUEST, modifyPost);\n}\n\nfunction* watchLoadRelatedPost() {\n  yield takeLatest(LOAD_RELATED_POST_REQUEST, RelatedPost);\n}\n\nfunction* watchCoopLoadPost() {\n  yield takeLatest(LOAD_COOP_POST_REQUEST, loadCoopPosts);\n}\n\nfunction* watchPlayLoadPost() {\n  yield takeLatest(LOAD_PLAY_POST_REQUEST, loadPlayPosts);\n}\n\nfunction* watchoSendLoadPost() {\n  yield takeLatest(LOAD_O_SEND_POST_REQUEST, loadoSendPosts);\n}\n\nfunction* watchoRecieveLoadPost() {\n  yield takeLatest(LOAD_O_RECIEVE_POST_REQUEST, loadoRecievePosts);\n}\n\nfunction* watchtSendLoadPost() {\n  yield takeLatest(LOAD_T_SEND_POST_REQUEST, loadtSendPosts);\n}\n\nfunction* watchtRecieveLoadPost() {\n  yield takeLatest(LOAD_T_RECIEVE_POST_REQUEST, loadtRecievePosts);\n}\n\nfunction* watchLoadLikedtagPosts() {\n  yield takeLatest(LOAD_LIKED_POSTS_REQUEST, loadLikedPosts);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadSPost), fork(watchLoadPost), fork(watchLoadRelatedPost), fork(watchLoadHashtagPosts), fork(watchLoadLikedtagPosts), fork(watchLoadUserPosts), fork(watchLikePost), fork(watchUnLikePost), fork(watchRemovePost), fork(watchModifyPost), fork(watchAddComment), fork(watchUploadImages), fork(watchPlayLoadPost), fork(watchCoopLoadPost), fork(watchoSendLoadPost), fork(watchoRecieveLoadPost), fork(watchtSendLoadPost), fork(watchtRecieveLoadPost)]);\n}","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/sagas/post.js"],"names":["all","call","fork","put","takeLatest","throttle","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_LIKED_POSTS_FAILURE","LOAD_LIKED_POSTS_REQUEST","LOAD_LIKED_POSTS_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_RELATED_POST_FAILURE","LOAD_RELATED_POST_REQUEST","LOAD_RELATED_POST_SUCCESS","LOAD_COOP_POST_REQUEST","LOAD_COOP_POST_SUCCESS","LOAD_COOP_POST_FAILURE","LOAD_PLAY_POST_REQUEST","LOAD_PLAY_POST_SUCCESS","LOAD_PLAY_POST_FAILURE","LOAD_O_SEND_POST_REQUEST","LOAD_O_SEND_POST_SUCCESS","LOAD_O_SEND_POST_FAILURE","LOAD_O_RECIEVE_POST_REQUEST","LOAD_O_RECIEVE_POST_SUCCESS","LOAD_O_RECIEVE_POST_FAILURE","LOAD_T_SEND_POST_REQUEST","LOAD_T_SEND_POST_SUCCESS","LOAD_T_SEND_POST_FAILURE","LOAD_T_RECIEVE_POST_REQUEST","LOAD_T_RECIEVE_POST_SUCCESS","LOAD_T_RECIEVE_POST_FAILURE","LOAD_SPOST_FAILURE","LOAD_SPOST_REQUEST","LOAD_SPOST_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","MODIFY_POST_FAILURE","MODIFY_POST_REQUEST","MODIFY_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","addPostAPI","data","post","addPost","action","result","type","id","err","error","response","removePostAPI","delete","removePost","loadPostAPI","category","lastId","loadPost","loadSPostAPI","get","loadSPost","likePostAPI","patch","likePost","unlikePostAPI","unlikePost","addCommentAPI","postId","addComment","console","uploadImagesAPI","uploadImages","loadUserPostsAPI","loadUserPosts","RelatedPostAPI","RelatedPost","loadHashtagPostsAPI","encodeURIComponent","loadHashtagPosts","loadLikedPostsAPI","loadLikedPosts","modifyPostAPI","PostId","modifyPost","loadCoopPostsAPI","loadCoopPosts","loadPlayPostsAPI","loadPlayPosts","loadoSendPostsAPI","loadoSendPosts","loadoRecievePostsAPI","loadoRecievePosts","loadtSendPostsAPI","loadtSendPosts","loadtRecievePostsAPI","loadtRecievePosts","watchAddPost","watchRemovePost","watchAddComment","watchLoadPost","watchLikePost","watchUnLikePost","watchUploadImages","watchLoadSPost","watchLoadUserPosts","watchLoadHashtagPosts","watchModifyPost","watchLoadRelatedPost","watchCoopLoadPost","watchPlayLoadPost","watchoSendLoadPost","watchoRecieveLoadPost","watchtSendLoadPost","watchtRecieveLoadPost","watchLoadLikedtagPosts","postSaga"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeLatest, throttle } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  LIKE_POST_FAILURE,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  LOAD_HASHTAG_POSTS_FAILURE,\r\n  LOAD_HASHTAG_POSTS_REQUEST,\r\n  LOAD_HASHTAG_POSTS_SUCCESS,\r\n  LOAD_LIKED_POSTS_FAILURE,\r\n  LOAD_LIKED_POSTS_REQUEST,\r\n  LOAD_LIKED_POSTS_SUCCESS,\r\n  LOAD_POST_FAILURE,\r\n  LOAD_POST_REQUEST,\r\n  LOAD_POST_SUCCESS,\r\n  LOAD_RELATED_POST_FAILURE,\r\n  LOAD_RELATED_POST_REQUEST,\r\n  LOAD_RELATED_POST_SUCCESS,\r\n  LOAD_COOP_POST_REQUEST,\r\n  LOAD_COOP_POST_SUCCESS,\r\n  LOAD_COOP_POST_FAILURE,\r\n  LOAD_PLAY_POST_REQUEST,\r\n  LOAD_PLAY_POST_SUCCESS,\r\n  LOAD_PLAY_POST_FAILURE,\r\n  LOAD_O_SEND_POST_REQUEST,\r\n  LOAD_O_SEND_POST_SUCCESS,\r\n  LOAD_O_SEND_POST_FAILURE,\r\n  LOAD_O_RECIEVE_POST_REQUEST,\r\n  LOAD_O_RECIEVE_POST_SUCCESS,\r\n  LOAD_O_RECIEVE_POST_FAILURE,\r\n  LOAD_T_SEND_POST_REQUEST,\r\n  LOAD_T_SEND_POST_SUCCESS,\r\n  LOAD_T_SEND_POST_FAILURE,\r\n  LOAD_T_RECIEVE_POST_REQUEST,\r\n  LOAD_T_RECIEVE_POST_SUCCESS,\r\n  LOAD_T_RECIEVE_POST_FAILURE,\r\n  LOAD_SPOST_FAILURE,\r\n  LOAD_SPOST_REQUEST,\r\n  LOAD_SPOST_SUCCESS,\r\n  LOAD_USER_POSTS_FAILURE,\r\n  LOAD_USER_POSTS_REQUEST,\r\n  LOAD_USER_POSTS_SUCCESS,\r\n  MODIFY_POST_FAILURE,\r\n  MODIFY_POST_REQUEST,\r\n  MODIFY_POST_SUCCESS,\r\n  REMOVE_POST_FAILURE,\r\n  REMOVE_POST_REQUEST,\r\n  REMOVE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE,\r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n  UPLOAD_IMAGES_FAILURE,\r\n  UPLOAD_IMAGES_REQUEST,\r\n  UPLOAD_IMAGES_SUCCESS,\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', data); // formdata 전송\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`); // delete는 데이터를 가져갈 수 없다 data는 postId\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPostAPI(data) {\r\n  // 스위치 문을 통해서 각 카테고리들을 코드로 변경하여 넣어주자!\r\n  var category = null;\r\n  switch (data.category){\r\n    case \"전체\":\r\n      break;\r\n    default:\r\n  }\r\n  return axios.post(`/posts?lastId=${data.lastId || 0}`,data);\r\n}\r\n\r\nfunction* loadPost(action) { // 일반게시물 불러오기\r\n  try {\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadSPostAPI(data) {\r\n  return axios.get(`/post/${data}`);\r\n}\r\n\r\nfunction* loadSPost(action) {\r\n  try {\r\n    const result = yield call(loadSPostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_SPOST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_SPOST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data, // PostId,UserId\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data, // PostId,UserId\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post('/post/images', data); // formdata는 { name: data } 같은 식으로 감싸버리면 json으로 자동 변환되버린다.\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadUserPostsAPI(data, lastId) {\r\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`); // api 서버 요청은 /user/:userId/posts\r\n}\r\n\r\nfunction* loadUserPosts(action) {\r\n  try {\r\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: LOAD_USER_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_USER_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction RelatedPostAPI(lastId) {\r\n  return axios.get(`/posts/related?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* RelatedPost(action) {\r\n  try {\r\n    const result = yield call(RelatedPostAPI, action.data, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: LOAD_RELATED_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_RELATED_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadHashtagPostsAPI(data, lastId) {\r\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadHashtagPosts(action) {\r\n  try {\r\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_HASHTAG_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadLikedPostsAPI(data, lastId) {\r\n  return axios.get(`/liked?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadLikedPosts(action) {\r\n  try {\r\n    const result = yield call(loadLikedPostsAPI, action.data, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 비슷하게 본다\r\n      type: LOAD_LIKED_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOAD_LIKED_POSTS_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction modifyPostAPI(data) {\r\n  return axios.patch(`/post/${data.PostId}`, data);\r\n}\r\n\r\nfunction* modifyPost(action) {\r\n  try {\r\n    const result = yield call(modifyPostAPI, action.data);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: MODIFY_POST_SUCCESS,\r\n      data: result.data, // PostId,UserId\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: MODIFY_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadCoopPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadCoopPosts(action) {\r\n  try {\r\n    const result = yield call(loadCoopPostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadPlayPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadPlayPosts(action) {\r\n  try {\r\n    const result = yield call(loadPlayPostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadoSendPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadoSendPosts(action) {\r\n  try {\r\n    const result = yield call(loadoSendPostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadoRecievePostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadoRecievePosts(action) {\r\n  try {\r\n    const result = yield call(loadoRecievePostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\nfunction loadtSendPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadtSendPosts(action) {\r\n  try {\r\n    const result = yield call(loadtSendPostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction loadtRecievePostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\n\r\nfunction* loadtRecievePosts(action) {\r\n  try {\r\n    const result = yield call(loadtRecievePostsAPI, action.lastId);\r\n    yield put({ // put이 액션을 dispatch하는 역할과 빗슷하게 본다\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n  yield takeLatest( LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction* watchUnLikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nfunction* watchLoadSPost() {\r\n  yield takeLatest(LOAD_SPOST_REQUEST, loadSPost);\r\n}\r\n\r\nfunction* watchLoadUserPosts() {\r\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\r\n}\r\n\r\nfunction* watchLoadHashtagPosts() {\r\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\r\n}\r\n\r\nfunction* watchModifyPost() {\r\n  yield takeLatest(MODIFY_POST_REQUEST, modifyPost);\r\n}\r\n\r\nfunction* watchLoadRelatedPost() {\r\n  yield takeLatest(LOAD_RELATED_POST_REQUEST, RelatedPost);\r\n}\r\n\r\nfunction* watchCoopLoadPost() {\r\n  yield takeLatest(LOAD_COOP_POST_REQUEST, loadCoopPosts);\r\n}\r\n\r\nfunction* watchPlayLoadPost() {\r\n  yield takeLatest(LOAD_PLAY_POST_REQUEST, loadPlayPosts);\r\n}\r\n\r\nfunction* watchoSendLoadPost() {\r\n  yield takeLatest(LOAD_O_SEND_POST_REQUEST, loadoSendPosts);\r\n}\r\n\r\nfunction* watchoRecieveLoadPost() {\r\n  yield takeLatest(LOAD_O_RECIEVE_POST_REQUEST, loadoRecievePosts);\r\n}\r\n\r\nfunction* watchtSendLoadPost() {\r\n  yield takeLatest(LOAD_T_SEND_POST_REQUEST, loadtSendPosts);\r\n}\r\n\r\nfunction* watchtRecieveLoadPost() {\r\n  yield takeLatest(LOAD_T_RECIEVE_POST_REQUEST, loadtRecievePosts);\r\n}\r\n\r\nfunction* watchLoadLikedtagPosts() {\r\n  yield takeLatest(LOAD_LIKED_POSTS_REQUEST, loadLikedPosts);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchLoadSPost),\r\n    fork(watchLoadPost),\r\n    fork(watchLoadRelatedPost),\r\n    fork(watchLoadHashtagPosts),\r\n    fork(watchLoadLikedtagPosts),\r\n    fork(watchLoadUserPosts),\r\n    fork(watchLikePost),\r\n    fork(watchUnLikePost),\r\n    fork(watchRemovePost),\r\n    fork(watchModifyPost),\r\n    fork(watchAddComment),\r\n    fork(watchUploadImages),\r\n    fork(watchPlayLoadPost),\r\n    fork(watchCoopLoadPost),\r\n    fork(watchoSendLoadPost),\r\n    fork(watchoRecieveLoadPost),\r\n    fork(watchtSendLoadPost),\r\n    fork(watchtRecieveLoadPost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}