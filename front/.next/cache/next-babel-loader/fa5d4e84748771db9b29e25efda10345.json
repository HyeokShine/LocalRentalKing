{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\LocalRentalKing\\\\front\\\\pages\\\\search\\\\[searchInput].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport AppLayout from '../../components/AppLayout/AppLayout';\nimport Layout from \"../../components/Layout\";\nimport { LOAD_SEARCH_POSTS_REQUEST } from \"../../reducers/post\";\nimport Tags from \"../../components/Tags\";\nimport { Button } from \"antd\";\nimport PostCard1 from \"../../components/PostCard1\";\nimport PostCard2 from \"../../components/PostCard2\";\n\nfunction SearchResult() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var searchInput = router.query.searchInput; // [tag].js 파일 명의 [] 부분이 들어간다\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost,\n      loadPostLoading = _useSelector.loadPostLoading,\n      local = _useSelector.local,\n      boardNum = _useSelector.boardNum;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo,\n      me = _useSelector2.me;\n\n  var categoryAndsearch = searchInput.split('*');\n  var select = categoryAndsearch[0];\n  var searchword = categoryAndsearch[1];\n\n  var _useState = useState(true),\n      view = _useState[0],\n      setView = _useState[1];\n\n  var onSwitch = useCallback(function () {\n    setView(!view);\n  }, [view]);\n  useEffect(function () {\n    console.log(local);\n    console.log(select);\n    console.log(searchword);\n    console.log(boardNum);\n    dispatch({\n      // 검색어를 제목에서 포함하며, 지역이 일치하는 게시물들을 10개씩요청\n      type: LOAD_SEARCH_POSTS_REQUEST,\n      local: local,\n      select: select,\n      search: search,\n      boardNum: boardNum // boardNum 게시판의 select 요소를 기준으로 search 와 관련된 local 지역의 데이터를 가져온다.\n\n    });\n  }, []); // useEffect(() => {\n  //   const onScroll = () => {\n  //     if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n  //       if (hasMorePost && !loadPostLoading) {\n  //         dispatch({ // 검색어를 제목에서 포함하며, 지역이 일치하는 게시물들을 10개씩요청\n  //           type: LOAD_SEARCH_POSTS_REQUEST,\n  //           local: local,\n  //           select : select,\n  //           search: search,\n  //         });\n  //       }\n  //     }\n  //   };\n  //   window.addEventListener('scroll', onScroll);\n  //   return () => {\n  //     window.removeEventListener('scroll', onScroll);\n  //   };\n  // }, [mainPosts.length, hasMorePost, searchInput, loadPostLoading]);\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  });\n}\n\n_s(SearchResult, \"apGujsKj0ssh/wIQdB39m6gr9eU=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector];\n});\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/pages/search/[searchInput].js"],"names":["React","useCallback","useEffect","useState","useDispatch","useSelector","useRouter","AppLayout","Layout","LOAD_SEARCH_POSTS_REQUEST","Tags","Button","PostCard1","PostCard2","SearchResult","dispatch","router","searchInput","query","state","post","mainPosts","hasMorePost","loadPostLoading","local","boardNum","user","userInfo","me","categoryAndsearch","split","select","searchword","view","setView","onSwitch","console","log","type","search"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,yBAAR,QAAwC,qBAAxC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAAQC,MAAR,QAAqB,MAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,MAAM,GAAGV,SAAS,EAAxB;AACA,MAAOW,WAAP,GAAsBD,MAAM,CAACE,KAA7B,CAAOD,WAAP,CAHsB,CAGc;;AACpC,qBAAoEZ,WAAW,CAAC,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA/E;AAAA,MAAOC,SAAP,gBAAOA,SAAP;AAAA,MAAkBC,WAAlB,gBAAkBA,WAAlB;AAAA,MAA+BC,eAA/B,gBAA+BA,eAA/B;AAAA,MAAgDC,KAAhD,gBAAgDA,KAAhD;AAAA,MAAwDC,QAAxD,gBAAwDA,QAAxD;;AACA,sBAAuBpB,WAAW,CAAC,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACO,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAOC,QAAP,iBAAOA,QAAP;AAAA,MAAiBC,EAAjB,iBAAiBA,EAAjB;;AAEA,MAAMC,iBAAiB,GAAGZ,WAAW,CAACa,KAAZ,CAAkB,GAAlB,CAA1B;AACA,MAAMC,MAAM,GAAGF,iBAAiB,CAAC,CAAD,CAAhC;AACA,MAAMG,UAAU,GAAGH,iBAAiB,CAAC,CAAD,CAApC;;AAEA,kBAAwB1B,QAAQ,CAAC,IAAD,CAAhC;AAAA,MAAO8B,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,QAAQ,GAAGlC,WAAW,CAAC,YAAM;AACjCiC,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAF2B,EAEzB,CAACA,IAAD,CAFyB,CAA5B;AAIA/B,EAAAA,SAAS,CAAC,YAAM;AACdkC,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACAV,IAAAA,QAAQ,CAAC;AAAE;AACTuB,MAAAA,IAAI,EAAE7B,yBADC;AAEPe,MAAAA,KAAK,EAAEA,KAFA;AAGPO,MAAAA,MAAM,EAAEA,MAHD;AAIPQ,MAAAA,MAAM,EAAEA,MAJD;AAKPd,MAAAA,QAAQ,EAAEA,QALH,CAMP;;AANO,KAAD,CAAR;AAQD,GAbQ,EAaN,EAbM,CAAT,CAjBsB,CAgCtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAmBD;;GAtEQX,Y;UACUV,W,EACFE,S,EAEqDD,W,EAC7CA,W;;;KALhBS,Y;AAwET,eAAeA,YAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useRouter} from 'next/router';\r\nimport AppLayout from '../../components/AppLayout/AppLayout';\r\nimport Layout from \"../../components/Layout\";\r\nimport {LOAD_SEARCH_POSTS_REQUEST} from \"../../reducers/post\";\r\nimport Tags from \"../../components/Tags\";\r\nimport {Button} from \"antd\";\r\nimport PostCard1 from \"../../components/PostCard1\";\r\nimport PostCard2 from \"../../components/PostCard2\";\r\n\r\nfunction SearchResult() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const {searchInput} = router.query; // [tag].js 파일 명의 [] 부분이 들어간다\r\n  const {mainPosts, hasMorePost, loadPostLoading, local , boardNum} = useSelector((state) => state.post);\r\n  const {userInfo, me} = useSelector((state) => state.user);\r\n\r\n  const categoryAndsearch = searchInput.split('*');\r\n  const select = categoryAndsearch[0];\r\n  const searchword = categoryAndsearch[1];\r\n\r\n  const [view, setView] = useState(true);\r\n\r\n  const onSwitch = useCallback(() => {\r\n    setView(!view);\r\n  }, [view]);\r\n\r\n  useEffect(() => {\r\n    console.log(local);\r\n    console.log(select);\r\n    console.log(searchword);\r\n    console.log(boardNum);\r\n    dispatch({ // 검색어를 제목에서 포함하며, 지역이 일치하는 게시물들을 10개씩요청\r\n      type: LOAD_SEARCH_POSTS_REQUEST,\r\n      local: local,\r\n      select: select,\r\n      search: search,\r\n      boardNum: boardNum,\r\n      // boardNum 게시판의 select 요소를 기준으로 search 와 관련된 local 지역의 데이터를 가져온다.\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const onScroll = () => {\r\n  //     if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n  //       if (hasMorePost && !loadPostLoading) {\r\n  //         dispatch({ // 검색어를 제목에서 포함하며, 지역이 일치하는 게시물들을 10개씩요청\r\n  //           type: LOAD_SEARCH_POSTS_REQUEST,\r\n  //           local: local,\r\n  //           select : select,\r\n  //           search: search,\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   window.addEventListener('scroll', onScroll);\r\n  //   return () => {\r\n  //     window.removeEventListener('scroll', onScroll);\r\n  //   };\r\n  // }, [mainPosts.length, hasMorePost, searchInput, loadPostLoading]);\r\n\r\n  return (\r\n    <div>\r\n      {/*<Layout>*/}\r\n      {/*  view ? (*/}\r\n      {/*  <Layout>*/}\r\n      {/*    <Tags tagsData={object_TagsData} boardNum={1}/>*/}\r\n      {/*    <Button onClick={onSwitch}>전환스위치</Button>*/}\r\n      {/*    {mainPosts.map((post) => <PostCard1 key={post.id} post={post}/>)}*/}\r\n      {/*  </Layout>*/}\r\n      {/*  ) : (*/}\r\n      {/*  <Layout>*/}\r\n      {/*    <Tags tagsData={object_TagsData} boardNum={1}/>*/}\r\n      {/*    <Button onClick={onSwitch}>전환스위치</Button>*/}\r\n      {/*    {mainPosts.map((post) => <PostCard2 key={post.id} post={post}/>)}*/}\r\n      {/*  </Layout>*/}\r\n      {/*  )}*/}\r\n      {/*</Layout>}*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n"]},"metadata":{},"sourceType":"module"}