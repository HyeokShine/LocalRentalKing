{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\LocalRentalKing\\\\front\\\\components\\\\HotTags.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Tag, Button } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_POST_REQUEST } from \"../reducers/post\";\n\nfunction HotTags({\n  tagsData\n}) {\n  const {\n    CheckableTag\n  } = Tag;\n  const dispatch = useDispatch();\n  const {\n    0: selectedTags,\n    1: setSelectedTags\n  } = useState([]);\n  const handleChange = useCallback((tag, checked) => {\n    const nextSelectedTags = checked ? [tag, ...selectedTags] : selectedTags.filter(t => t !== tag);\n    setSelectedTags([...nextSelectedTags]); //여기서 걍 다이렉트로 nextSelectedTags[0]를 category변수로 디스패치로 전송하면 되는거 아니야?\n    //아니면 여기서는 post 리듀서의 카테고리 변수에 변화를 주고 렌더링중인 메인 페이지에서 useEffect로 카테고리 변수를 감시시켜서\n    //해당하는 카테고리의 게시물을 10개 부르는 알고리즘으로 이어버리던가\n\n    dispatch({\n      type: LOAD_POST_REQUEST,\n      data: {\n        category: nextSelectedTags[0]\n      }\n    });\n    console.log('You are interested in: ', nextSelectedTags);\n    console.log('You are interested in: ', nextSelectedTags[0]);\n  }, []);\n  useEffect(() => {\n    setSelectedTags(['전체']);\n  }, []);\n  return __jsx(React.Fragment, null, tagsData.map(tag => __jsx(CheckableTag, {\n    key: tag,\n    checked: selectedTags.indexOf(tag) > -1,\n    onChange: checked => handleChange(tag, checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, tag)));\n}\n\nexport default HotTags;","map":{"version":3,"sources":["C:/study/LocalRentalKing/front/components/HotTags.js"],"names":["React","useCallback","useEffect","useState","Tag","Button","useDispatch","useSelector","LOAD_POST_REQUEST","HotTags","tagsData","CheckableTag","dispatch","selectedTags","setSelectedTags","handleChange","tag","checked","nextSelectedTags","filter","t","type","data","category","console","log","map","indexOf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AAEA,SAASC,GAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,iBAAR,QAAgC,kBAAhC;;AAEA,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA6B;AAE3B,QAAM;AAAEC,IAAAA;AAAF,MAAmBP,GAAzB;AAEA,QAAMQ,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM;AAAA,OAACO,YAAD;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMY,YAAY,GAAGd,WAAW,CAAC,CAACe,GAAD,EAAMC,OAAN,KAAkB;AACjD,UAAMC,gBAAgB,GAAGD,OAAO,GAAG,CAAED,GAAF,EAAM,GAAGH,YAAT,CAAH,GAA6BA,YAAY,CAACM,MAAb,CAAoBC,CAAC,IAAIA,CAAC,KAAKJ,GAA/B,CAA7D;AACAF,IAAAA,eAAe,CAAC,CAAC,GAAGI,gBAAJ,CAAD,CAAf,CAFiD,CAGjD;AACA;AACA;;AACAN,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAACb,iBADE;AAEPc,MAAAA,IAAI,EAAC;AAACC,QAAAA,QAAQ,EAACL,gBAAgB,CAAC,CAAD;AAA1B;AAFE,KAAD,CAAR;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCP,gBAAvC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCP,gBAAgB,CAAC,CAAD,CAAvD;AACC,GAZ6B,EAY5B,EAZ4B,CAAhC;AAcAhB,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,eAAe,CAAC,CAAC,IAAD,CAAD,CAAf;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,SACE,4BACGJ,QAAQ,CAACgB,GAAT,CAAaV,GAAG,IACf,MAAC,YAAD;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,OAAO,EAAEH,YAAY,CAACc,OAAb,CAAqBX,GAArB,IAA4B,CAAC,CAFxC;AAGE,IAAA,QAAQ,EAAEC,OAAO,IAAIF,YAAY,CAACC,GAAD,EAAMC,OAAN,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,GALH,CADD,CADH,CADF;AAaD;;AAED,eAAeP,OAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { Tag , Button } from 'antd';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {LOAD_POST_REQUEST} from \"../reducers/post\";\r\n\r\nfunction HotTags({tagsData}) {\r\n\r\n  const { CheckableTag } = Tag;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [selectedTags,setSelectedTags] =useState([]);\r\n\r\n  const handleChange = useCallback((tag, checked) => {\r\n    const nextSelectedTags = checked ? [ tag,...selectedTags,] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags([...nextSelectedTags]);\r\n    //여기서 걍 다이렉트로 nextSelectedTags[0]를 category변수로 디스패치로 전송하면 되는거 아니야?\r\n    //아니면 여기서는 post 리듀서의 카테고리 변수에 변화를 주고 렌더링중인 메인 페이지에서 useEffect로 카테고리 변수를 감시시켜서\r\n    //해당하는 카테고리의 게시물을 10개 부르는 알고리즘으로 이어버리던가\r\n    dispatch({\r\n      type:LOAD_POST_REQUEST,\r\n      data:{category:nextSelectedTags[0]},\r\n    })\r\n    console.log('You are interested in: ', nextSelectedTags);\r\n    console.log('You are interested in: ', nextSelectedTags[0]);\r\n    },[]);\r\n\r\n  useEffect(()=>{\r\n    setSelectedTags(['전체']);\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      {tagsData.map(tag => (\r\n        <CheckableTag\r\n          key={tag}\r\n          checked={selectedTags.indexOf(tag) > -1}\r\n          onChange={checked => handleChange(tag, checked)}\r\n        >\r\n          {tag}\r\n        </CheckableTag>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HotTags;\r\n"]},"metadata":{},"sourceType":"module"}